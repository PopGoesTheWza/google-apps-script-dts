)]}'
{"1":{"1":"YoutubePartner_v1","2":[{"1":"AssetLabels","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetLabelsCollection","3":1},{"1":"AssetMatchPolicy","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetMatchPolicyCollection","3":1},{"1":"AssetRelationships","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetRelationshipsCollection","3":1},{"1":"AssetSearch","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetSearchCollection","3":1},{"1":"AssetShares","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetSharesCollection","3":1},{"1":"Assets","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetsCollection","3":1},{"1":"Campaigns","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.CampaignsCollection","3":1},{"1":"ClaimHistory","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.ClaimHistoryCollection","3":1},{"1":"ClaimSearch","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.ClaimSearchCollection","3":1},{"1":"Claims","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.ClaimsCollection","3":1},{"1":"ContentOwnerAdvertisingOptions","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.ContentOwnerAdvertisingOptionsCollection","3":1},{"1":"ContentOwners","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.ContentOwnersCollection","3":1},{"1":"LiveCuepoints","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.LiveCuepointsCollection","3":1},{"1":"MetadataHistory","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.MetadataHistoryCollection","3":1},{"1":"Orders","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.OrdersCollection","3":1},{"1":"Ownership","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.OwnershipCollection","3":1},{"1":"OwnershipHistory","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.OwnershipHistoryCollection","3":1},{"1":"Package","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.PackageCollection","3":1},{"1":"Policies","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.PoliciesCollection","3":1},{"1":"Publishers","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.PublishersCollection","3":1},{"1":"ReferenceConflicts","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.ReferenceConflictsCollection","3":1},{"1":"References","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.ReferencesCollection","3":1},{"1":"SpreadsheetTemplate","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.SpreadsheetTemplateCollection","3":1},{"1":"Uploader","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.UploaderCollection","3":1},{"1":"Validator","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.ValidatorCollection","3":1},{"1":"VideoAdvertisingOptions","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.VideoAdvertisingOptionsCollection","3":1},{"1":"Whitelists","2":"YoutubePartner_v1.YoutubePartner.V1.Collection.WhitelistsCollection","3":1}],"3":[{"1":"newAdBreak","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AdBreak","6":"Create a new instance of AdBreak"},{"1":"newAdSlot","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AdSlot","6":"Create a new instance of AdSlot"},{"1":"newAllowedAdvertisingOptions","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AllowedAdvertisingOptions","6":"Create a new instance of AllowedAdvertisingOptions"},{"1":"newAsset","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset","6":"Create a new instance of Asset"},{"1":"newAssetLabel","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetLabel","6":"Create a new instance of AssetLabel"},{"1":"newAssetMatchPolicy","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","6":"Create a new instance of AssetMatchPolicy"},{"1":"newAssetRelationship","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetRelationship","6":"Create a new instance of AssetRelationship"},{"1":"newCampaign","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign","6":"Create a new instance of Campaign"},{"1":"newCampaignData","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignData","6":"Create a new instance of CampaignData"},{"1":"newCampaignSource","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignSource","6":"Create a new instance of CampaignSource"},{"1":"newCampaignTargetLink","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignTargetLink","6":"Create a new instance of CampaignTargetLink"},{"1":"newClaim","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim","6":"Create a new instance of Claim"},{"1":"newClaimMatchInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimMatchInfo","6":"Create a new instance of ClaimMatchInfo"},{"1":"newClaimMatchInfoLongestMatch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimMatchInfoLongestMatch","6":"Create a new instance of ClaimMatchInfoLongestMatch"},{"1":"newClaimMatchInfoTotalMatch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimMatchInfoTotalMatch","6":"Create a new instance of ClaimMatchInfoTotalMatch"},{"1":"newClaimOrigin","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimOrigin","6":"Create a new instance of ClaimOrigin"},{"1":"newClaimedVideoDefaults","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimedVideoDefaults","6":"Create a new instance of ClaimedVideoDefaults"},{"1":"newConditions","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Conditions","6":"Create a new instance of Conditions"},{"1":"newConflictingOwnership","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ConflictingOwnership","6":"Create a new instance of ConflictingOwnership"},{"1":"newContentOwnerAdvertisingOption","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption","6":"Create a new instance of ContentOwnerAdvertisingOption"},{"1":"newCuepointSettings","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CuepointSettings","6":"Create a new instance of CuepointSettings"},{"1":"newDate","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Date","6":"Create a new instance of Date"},{"1":"newDateRange","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.DateRange","6":"Create a new instance of DateRange"},{"1":"newExcludedInterval","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ExcludedInterval","6":"Create a new instance of ExcludedInterval"},{"1":"newIntervalCondition","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.IntervalCondition","6":"Create a new instance of IntervalCondition"},{"1":"newLiveCuepoint","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.LiveCuepoint","6":"Create a new instance of LiveCuepoint"},{"1":"newMatchSegment","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.MatchSegment","6":"Create a new instance of MatchSegment"},{"1":"newMetadata","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Metadata","6":"Create a new instance of Metadata"},{"1":"newOrder","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order","6":"Create a new instance of Order"},{"1":"newOrigination","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Origination","6":"Create a new instance of Origination"},{"1":"newOwnershipConflicts","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.OwnershipConflicts","6":"Create a new instance of OwnershipConflicts"},{"1":"newPackage","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Package","6":"Create a new instance of Package"},{"1":"newPolicy","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","6":"Create a new instance of Policy"},{"1":"newPolicyRule","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PolicyRule","6":"Create a new instance of PolicyRule"},{"1":"newPromotedContent","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PromotedContent","6":"Create a new instance of PromotedContent"},{"1":"newRating","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Rating","6":"Create a new instance of Rating"},{"1":"newReference","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","6":"Create a new instance of Reference"},{"1":"newRequirements","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Requirements","6":"Create a new instance of Requirements"},{"1":"newRightsOwnership","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","6":"Create a new instance of RightsOwnership"},{"1":"newSegment","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Segment","6":"Create a new instance of Segment"},{"1":"newShowDetails","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ShowDetails","6":"Create a new instance of ShowDetails"},{"1":"newStateCompleted","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.StateCompleted","6":"Create a new instance of StateCompleted"},{"1":"newStatusReport","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.StatusReport","6":"Create a new instance of StatusReport"},{"1":"newTerritoryCondition","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryCondition","6":"Create a new instance of TerritoryCondition"},{"1":"newTerritoryConflicts","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryConflicts","6":"Create a new instance of TerritoryConflicts"},{"1":"newTerritoryOwners","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryOwners","6":"Create a new instance of TerritoryOwners"},{"1":"newValidateAsyncRequest","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateAsyncRequest","6":"Create a new instance of ValidateAsyncRequest"},{"1":"newValidateRequest","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateRequest","6":"Create a new instance of ValidateRequest"},{"1":"newValidateStatusRequest","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateStatusRequest","6":"Create a new instance of ValidateStatusRequest"},{"1":"newVideoAdvertisingOption","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOption","6":"Create a new instance of VideoAdvertisingOption"},{"1":"newWhitelist","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Whitelist","6":"Create a new instance of Whitelist"}],"6":"API for YouTube partners. To use this API a YouTube CMS account is required."},"2":[{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetLabelsCollection","3":[{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetLabel","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.AssetLabel"}],"6":"Insert an asset label for an owner."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetLabel","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.AssetLabel"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Insert an asset label for an owner."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetLabelListResponse","6":"Retrieves a list of all asset labels for an owner."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetLabelListResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of all asset labels for an owner."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetMatchPolicyCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy."}],"6":"Retrieves the match policy assigned to the specified asset by the content owner associated with the authenticated user. This information is only accessible to an owner of the asset."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves the match policy assigned to the specified asset by the content owner associated with the authenticated user. This information is only accessible to an owner of the asset."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.AssetMatchPolicy"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy."}],"6":"Updates the asset's match policy. If an asset has multiple owners, each owner may set its own match policy for the asset. YouTube then computes the match policy that is actually applied for the asset based on the territories where each owner owns the asset. This method supports patch semantics."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.AssetMatchPolicy"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates the asset's match policy. If an asset has multiple owners, each owner may set its own match policy for the asset. YouTube then computes the match policy that is actually applied for the asset based on the territories where each owner owns the asset. This method supports patch semantics."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.AssetMatchPolicy"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy."}],"6":"Updates the asset's match policy. If an asset has multiple owners, each owner may set its own match policy for the asset. YouTube then computes the match policy that is actually applied for the asset based on the territories where each owner owns the asset."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.AssetMatchPolicy"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates the asset's match policy. If an asset has multiple owners, each owner may set its own match policy for the asset. YouTube then computes the match policy that is actually applied for the asset based on the territories where each owner owns the asset."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetRelationshipsCollection","3":[{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetRelationship","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.AssetRelationship"}],"6":"Creates a relationship that links two assets."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetRelationship","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.AssetRelationship"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Creates a relationship that links two assets."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetRelationshipListResponse","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the asset ID of the asset for which you are retrieving relationships."}],"6":"Retrieves a list of relationships for a given asset. The list contains relationships where the specified asset is either the parent (embedding) or child (embedded) asset in the relationship."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetRelationshipListResponse","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the asset ID of the asset for which you are retrieving relationships."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of relationships for a given asset. The list contains relationships where the specified asset is either the parent (embedding) or child (embedded) asset in the relationship."},{"1":"remove","2":"void","3":[{"1":"assetRelationshipId","2":"String","3":"The assetRelationshipId parameter specifies a value that uniquely identifies the relationship you are deleting."}],"6":"Deletes a relationship between two assets."},{"1":"remove","2":"void","3":[{"1":"assetRelationshipId","2":"String","3":"The assetRelationshipId parameter specifies a value that uniquely identifies the relationship you are deleting."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Deletes a relationship between two assets."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetSearchCollection","3":[{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetSearchResponse","6":"Searches for assets based on asset metadata. The method can retrieve all assets or only assets owned by the content owner. This method mimics the functionality of the advanced search feature on the Assets page in CMS."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetSearchResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Searches for assets based on asset metadata. The method can retrieve all assets or only assets owned by the content owner. This method mimics the functionality of the advanced search feature on the Assets page in CMS."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetSharesCollection","3":[{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetShareListResponse","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the asset ID for which you are retrieving data. The parameter can be an asset view ID or an asset share ID. \n- If the value is an asset view ID, the API response identifies any asset share ids mapped to the asset view.\n- If the value is an asset share ID, the API response identifies any asset view ids that maps to that asset share."}],"6":"This method either retrieves a list of asset shares the partner owns and that map to a specified asset view ID or it retrieves a list of asset views associated with a specified asset share ID owned by the partner."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetShareListResponse","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the asset ID for which you are retrieving data. The parameter can be an asset view ID or an asset share ID. \n- If the value is an asset view ID, the API response identifies any asset share ids mapped to the asset view.\n- If the value is an asset share ID, the API response identifies any asset view ids that maps to that asset share."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"This method either retrieves a list of asset shares the partner owns and that map to a specified asset view ID or it retrieves a list of asset views associated with a specified asset share ID owned by the partner."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.AssetsCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset being retrieved."}],"6":"Retrieves the metadata for the specified asset. Note that if the request identifies an asset that has been merged with another asset, meaning that YouTube identified the requested asset as a duplicate, then the request retrieves the merged, or synthesized, asset."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves the metadata for the specified asset. Note that if the request identifies an asset that has been merged with another asset, meaning that YouTube identified the requested asset as a duplicate, then the request retrieves the merged, or synthesized, asset."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Asset"}],"6":"Inserts an asset with the specified metadata. After inserting an asset, you can set its ownership data and match policy."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Asset"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Inserts an asset with the specified metadata. After inserting an asset, you can set its ownership data and match policy."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetListResponse","3":[{"1":"id","2":"String","3":"The id parameter specifies a comma-separated list of YouTube Asset IDs that identify the assets you want to retrieve. As noted in the method description, if you try to retrieve an asset that YouTube identified as a duplicate and merged with another asset, the API response only returns the synthesized asset. In that case, the aliasId property in the asset resource specifies a list of other asset IDs that can be used to identify that asset.\n\nAlso note that the API response does not contain duplicates. As such, if your request identifies three asset IDs, and all of those have been merged into a single asset, then the API response identifies one matching asset."}],"6":"Retrieves a list of assets based on asset metadata. The method can retrieve all assets or only assets owned by the content owner.\n\nNote that in cases where duplicate assets have been merged, the API response only contains the synthesized asset. (It does not contain the constituent assets that were merged into the synthesized asset.)"},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetListResponse","3":[{"1":"id","2":"String","3":"The id parameter specifies a comma-separated list of YouTube Asset IDs that identify the assets you want to retrieve. As noted in the method description, if you try to retrieve an asset that YouTube identified as a duplicate and merged with another asset, the API response only returns the synthesized asset. In that case, the aliasId property in the asset resource specifies a list of other asset IDs that can be used to identify that asset.\n\nAlso note that the API response does not contain duplicates. As such, if your request identifies three asset IDs, and all of those have been merged into a single asset, then the API response identifies one matching asset."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of assets based on asset metadata. The method can retrieve all assets or only assets owned by the content owner.\n\nNote that in cases where duplicate assets have been merged, the API response only contains the synthesized asset. (It does not contain the constituent assets that were merged into the synthesized asset.)"},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Asset"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset being updated."}],"6":"Updates the metadata for the specified asset. This method supports patch semantics."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Asset"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset being updated."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates the metadata for the specified asset. This method supports patch semantics."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Asset"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset being updated."}],"6":"Updates the metadata for the specified asset."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Asset"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset being updated."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates the metadata for the specified asset."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.CampaignsCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign","3":[{"1":"campaignId","2":"String","3":"The campaignId parameter specifies the YouTube campaign ID of the campaign being retrieved."}],"6":"Retrieves a particular campaign for an owner."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign","3":[{"1":"campaignId","2":"String","3":"The campaignId parameter specifies the YouTube campaign ID of the campaign being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a particular campaign for an owner."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Campaign"}],"6":"Insert a new campaign for an owner using the specified campaign data."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Campaign"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Insert a new campaign for an owner using the specified campaign data."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignList","6":"Retrieves a list of campaigns for an owner."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignList","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of campaigns for an owner."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Campaign"},{"1":"campaignId","2":"String","3":"The campaignId parameter specifies the YouTube campaign ID of the campaign being retrieved."}],"6":"Update the data for a specific campaign. This method supports patch semantics."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Campaign"},{"1":"campaignId","2":"String","3":"The campaignId parameter specifies the YouTube campaign ID of the campaign being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Update the data for a specific campaign. This method supports patch semantics."},{"1":"remove","2":"void","3":[{"1":"campaignId","2":"String","3":"The campaignId parameter specifies the YouTube campaign ID of the campaign being deleted."}],"6":"Deletes a specified campaign for an owner."},{"1":"remove","2":"void","3":[{"1":"campaignId","2":"String","3":"The campaignId parameter specifies the YouTube campaign ID of the campaign being deleted."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Deletes a specified campaign for an owner."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Campaign"},{"1":"campaignId","2":"String","3":"The campaignId parameter specifies the YouTube campaign ID of the campaign being retrieved."}],"6":"Update the data for a specific campaign."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Campaign"},{"1":"campaignId","2":"String","3":"The campaignId parameter specifies the YouTube campaign ID of the campaign being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Update the data for a specific campaign."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.ClaimHistoryCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimHistory","3":[{"1":"claimId","2":"String","3":"The claimId parameter specifies the YouTube claim ID of the claim for which you are retrieving the claim history."}],"6":"Retrieves the claim history for a specified claim."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimHistory","3":[{"1":"claimId","2":"String","3":"The claimId parameter specifies the YouTube claim ID of the claim for which you are retrieving the claim history."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves the claim history for a specified claim."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.ClaimSearchCollection","3":[{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimSearchResponse","6":"Retrieves a list of claims that match the search criteria. You can search for claims that are associated with a specific asset or video or that match a specified query string."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimSearchResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of claims that match the search criteria. You can search for claims that are associated with a specific asset or video or that match a specified query string."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.ClaimsCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim","3":[{"1":"claimId","2":"String","3":"The claimId parameter specifies the claim ID of the claim being retrieved."}],"6":"Retrieves a specific claim by ID."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim","3":[{"1":"claimId","2":"String","3":"The claimId parameter specifies the claim ID of the claim being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a specific claim by ID."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Claim"}],"6":"Creates a claim. The video being claimed must have been uploaded to a channel associated with the same content owner as the API user sending the request. You can set the claim's policy in any of the following ways:\n- Use the claim resource's policy property to identify a saved policy by its unique ID.\n- Use the claim resource's policy property to specify a custom set of rules."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Claim"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Creates a claim. The video being claimed must have been uploaded to a channel associated with the same content owner as the API user sending the request. You can set the claim's policy in any of the following ways:\n- Use the claim resource's policy property to identify a saved policy by its unique ID.\n- Use the claim resource's policy property to specify a custom set of rules."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimListResponse","6":"Retrieves a list of claims administered by the content owner associated with the currently authenticated user. Results are sorted in descending order of creation time."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimListResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of claims administered by the content owner associated with the currently authenticated user. Results are sorted in descending order of creation time."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Claim"},{"1":"claimId","2":"String","3":"The claimId parameter specifies the claim ID of the claim being updated."}],"6":"Updates an existing claim by either changing its policy or its status. You can update a claim's status from active to inactive to effectively release the claim. This method supports patch semantics."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Claim"},{"1":"claimId","2":"String","3":"The claimId parameter specifies the claim ID of the claim being updated."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates an existing claim by either changing its policy or its status. You can update a claim's status from active to inactive to effectively release the claim. This method supports patch semantics."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Claim"},{"1":"claimId","2":"String","3":"The claimId parameter specifies the claim ID of the claim being updated."}],"6":"Updates an existing claim by either changing its policy or its status. You can update a claim's status from active to inactive to effectively release the claim."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Claim"},{"1":"claimId","2":"String","3":"The claimId parameter specifies the claim ID of the claim being updated."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates an existing claim by either changing its policy or its status. You can update a claim's status from active to inactive to effectively release the claim."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.ContentOwnerAdvertisingOptionsCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption","6":"Retrieves advertising options for the content owner associated with the authenticated user."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves advertising options for the content owner associated with the authenticated user."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption"}],"6":"Updates advertising options for the content owner associated with the authenticated API user. This method supports patch semantics."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates advertising options for the content owner associated with the authenticated API user. This method supports patch semantics."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption"}],"6":"Updates advertising options for the content owner associated with the authenticated API user."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates advertising options for the content owner associated with the authenticated API user."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.ContentOwnersCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwner","3":[{"1":"contentOwnerId","2":"String","3":"The contentOwnerId parameter specifies a value that uniquely identifies the content owner."}],"6":"Retrieves information about the specified content owner."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwner","3":[{"1":"contentOwnerId","2":"String","3":"The contentOwnerId parameter specifies a value that uniquely identifies the content owner."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves information about the specified content owner."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerListResponse","6":"Retrieves a list of content owners that match the request criteria."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerListResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of content owners that match the request criteria."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.LiveCuepointsCollection","3":[{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.LiveCuepoint","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.LiveCuepoint"},{"1":"channelId","2":"String","3":"The channelId parameter identifies the channel that owns the broadcast into which the cuepoint is being inserted."}],"6":"Inserts a cuepoint into a live broadcast."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.LiveCuepoint","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.LiveCuepoint"},{"1":"channelId","2":"String","3":"The channelId parameter identifies the channel that owns the broadcast into which the cuepoint is being inserted."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Inserts a cuepoint into a live broadcast."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.MetadataHistoryCollection","3":[{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.MetadataHistoryListResponse","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving a metadata history."}],"6":"Retrieves a list of all metadata provided for an asset, regardless of which content owner provided the data."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.MetadataHistoryListResponse","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving a metadata history."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of all metadata provided for an asset, regardless of which content owner provided the data."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.OrdersCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order","3":[{"1":"orderId","2":"String","3":"The id of the order."}],"6":"Retrieve the details of an existing order."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order","3":[{"1":"orderId","2":"String","3":"The id of the order."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieve the details of an existing order."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Order"}],"6":"Creates a new basic order entry in the YouTube premium asset order management system. You must supply at least a country and channel in the new order."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Order"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Creates a new basic order entry in the YouTube premium asset order management system. You must supply at least a country and channel in the new order."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.OrderListResponse","6":"Return a list of orders, filtered by the parameters below, may return more than a single page of results."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.OrderListResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Return a list of orders, filtered by the parameters below, may return more than a single page of results."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Order"},{"1":"orderId","2":"String","3":"The id of the order."}],"6":"Update the values in an existing order. This method supports patch semantics."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Order"},{"1":"orderId","2":"String","3":"The id of the order."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Update the values in an existing order. This method supports patch semantics."},{"1":"remove","2":"void","3":[{"1":"orderId","2":"String","3":"Id of the order to delete."}],"6":"Delete an order, which moves orders to inactive state and removes any associated video."},{"1":"remove","2":"void","3":[{"1":"orderId","2":"String","3":"Id of the order to delete."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Delete an order, which moves orders to inactive state and removes any associated video."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Order"},{"1":"orderId","2":"String","3":"The id of the order."}],"6":"Update the values in an existing order."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Order"},{"1":"orderId","2":"String","3":"The id of the order."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Update the values in an existing order."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.OwnershipCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID for which you are retrieving ownership data."}],"6":"Retrieves the ownership data provided for the specified asset by the content owner associated with the authenticated user."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID for which you are retrieving ownership data."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves the ownership data provided for the specified asset by the content owner associated with the authenticated user."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.RightsOwnership"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset being updated."}],"6":"Provides new ownership information for the specified asset. Note that YouTube may receive ownership information from multiple sources. For example, if an asset has multiple owners, each owner might send ownership data for the asset. YouTube algorithmically combines the ownership data received from all of those sources to generate the asset's canonical ownership data, which should provide the most comprehensive and accurate representation of the asset's ownership. This method supports patch semantics."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.RightsOwnership"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset being updated."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Provides new ownership information for the specified asset. Note that YouTube may receive ownership information from multiple sources. For example, if an asset has multiple owners, each owner might send ownership data for the asset. YouTube algorithmically combines the ownership data received from all of those sources to generate the asset's canonical ownership data, which should provide the most comprehensive and accurate representation of the asset's ownership. This method supports patch semantics."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.RightsOwnership"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset being updated."}],"6":"Provides new ownership information for the specified asset. Note that YouTube may receive ownership information from multiple sources. For example, if an asset has multiple owners, each owner might send ownership data for the asset. YouTube algorithmically combines the ownership data received from all of those sources to generate the asset's canonical ownership data, which should provide the most comprehensive and accurate representation of the asset's ownership."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.RightsOwnership"},{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset being updated."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Provides new ownership information for the specified asset. Note that YouTube may receive ownership information from multiple sources. For example, if an asset has multiple owners, each owner might send ownership data for the asset. YouTube algorithmically combines the ownership data received from all of those sources to generate the asset's canonical ownership data, which should provide the most comprehensive and accurate representation of the asset's ownership."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.OwnershipHistoryCollection","3":[{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.OwnershipHistoryListResponse","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving an ownership data history."}],"6":"Retrieves a list of the ownership data for an asset, regardless of which content owner provided the data. The list only includes the most recent ownership data for each content owner. However, if the content owner has submitted ownership data through multiple data sources (API, content feeds, etc.), the list will contain the most recent data for each content owner and data source."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.OwnershipHistoryListResponse","3":[{"1":"assetId","2":"String","3":"The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving an ownership data history."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of the ownership data for an asset, regardless of which content owner provided the data. The list only includes the most recent ownership data for each content owner. However, if the content owner has submitted ownership data through multiple data sources (API, content feeds, etc.), the list will contain the most recent data for each content owner and data source."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.PackageCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Package","3":[{"1":"packageId","2":"String","3":"The packageId parameter specifies the Content Delivery package ID of the package being retrieved."}],"6":"Retrieves information for the specified package."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Package","3":[{"1":"packageId","2":"String","3":"The packageId parameter specifies the Content Delivery package ID of the package being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves information for the specified package."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PackageInsertResponse","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Package"}],"6":"Inserts a metadata-only package."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PackageInsertResponse","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Package"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Inserts a metadata-only package."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.PoliciesCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","3":[{"1":"policyId","2":"String","3":"The policyId parameter specifies a value that uniquely identifies the policy being retrieved."}],"6":"Retrieves the specified saved policy."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","3":[{"1":"policyId","2":"String","3":"The policyId parameter specifies a value that uniquely identifies the policy being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves the specified saved policy."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Policy"}],"6":"Creates a saved policy."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Policy"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Creates a saved policy."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PolicyList","6":"Retrieves a list of the content owner's saved policies."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PolicyList","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of the content owner's saved policies."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Policy"},{"1":"policyId","2":"String","3":"The policyId parameter specifies a value that uniquely identifies the policy being updated."}],"6":"Updates the specified saved policy. This method supports patch semantics."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Policy"},{"1":"policyId","2":"String","3":"The policyId parameter specifies a value that uniquely identifies the policy being updated."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates the specified saved policy. This method supports patch semantics."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Policy"},{"1":"policyId","2":"String","3":"The policyId parameter specifies a value that uniquely identifies the policy being updated."}],"6":"Updates the specified saved policy."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Policy"},{"1":"policyId","2":"String","3":"The policyId parameter specifies a value that uniquely identifies the policy being updated."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates the specified saved policy."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.PublishersCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Publisher","3":[{"1":"publisherId","2":"String","3":"The publisherId parameter specifies a publisher ID that uniquely identifies the publisher being retrieved."}],"6":"Retrieves information about the specified publisher."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Publisher","3":[{"1":"publisherId","2":"String","3":"The publisherId parameter specifies a publisher ID that uniquely identifies the publisher being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves information about the specified publisher."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PublisherList","6":"Retrieves a list of publishers that match the request criteria. This method is analogous to a publisher search function."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PublisherList","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of publishers that match the request criteria. This method is analogous to a publisher search function."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.ReferenceConflictsCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceConflict","3":[{"1":"referenceConflictId","2":"String","3":"The referenceConflictId parameter specifies the YouTube reference conflict ID of the reference conflict being retrieved."}],"6":"Retrieves information about the specified reference conflict."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceConflict","3":[{"1":"referenceConflictId","2":"String","3":"The referenceConflictId parameter specifies the YouTube reference conflict ID of the reference conflict being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves information about the specified reference conflict."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceConflictListResponse","6":"Retrieves a list of unresolved reference conflicts."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceConflictListResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of unresolved reference conflicts."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.ReferencesCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","3":[{"1":"referenceId","2":"String","3":"The referenceId parameter specifies the YouTube reference ID of the reference being retrieved."}],"6":"Retrieves information about the specified reference."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","3":[{"1":"referenceId","2":"String","3":"The referenceId parameter specifies the YouTube reference ID of the reference being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves information about the specified reference."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Reference"}],"6":"Creates a reference in one of the following ways:\n- If your request is uploading a reference file, YouTube creates the reference from the provided content. You can provide either a video/audio file or a pre-generated fingerprint. If you are providing a pre-generated fingerprint, set the reference resource's fpDirect property to true in the request body. In this flow, you can use either the multipart or resumable upload flows to provide the reference content.\n- If you want to create a reference using a claimed video as the reference content, use the claimId parameter to identify the claim."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Reference"},{"1":"mediaData","2":"Blob","3":"Media blob to upload. Accepts: \"*/*\". Max size: 20GB."}],"6":"Creates a reference in one of the following ways:\n- If your request is uploading a reference file, YouTube creates the reference from the provided content. You can provide either a video/audio file or a pre-generated fingerprint. If you are providing a pre-generated fingerprint, set the reference resource's fpDirect property to true in the request body. In this flow, you can use either the multipart or resumable upload flows to provide the reference content.\n- If you want to create a reference using a claimed video as the reference content, use the claimId parameter to identify the claim."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Reference"},{"1":"mediaData","2":"Blob","3":"Media blob to upload. Accepts: \"*/*\". Max size: 20GB."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Creates a reference in one of the following ways:\n- If your request is uploading a reference file, YouTube creates the reference from the provided content. You can provide either a video/audio file or a pre-generated fingerprint. If you are providing a pre-generated fingerprint, set the reference resource's fpDirect property to true in the request body. In this flow, you can use either the multipart or resumable upload flows to provide the reference content.\n- If you want to create a reference using a claimed video as the reference content, use the claimId parameter to identify the claim."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceListResponse","6":"Retrieves a list of references by ID or the list of references for the specified asset."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceListResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of references by ID or the list of references for the specified asset."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Reference"},{"1":"referenceId","2":"String","3":"The referenceId parameter specifies the YouTube reference ID of the reference being updated."}],"6":"Updates a reference. This method supports patch semantics."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Reference"},{"1":"referenceId","2":"String","3":"The referenceId parameter specifies the YouTube reference ID of the reference being updated."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates a reference. This method supports patch semantics."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Reference"},{"1":"referenceId","2":"String","3":"The referenceId parameter specifies the YouTube reference ID of the reference being updated."}],"6":"Updates a reference."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Reference"},{"1":"referenceId","2":"String","3":"The referenceId parameter specifies the YouTube reference ID of the reference being updated."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates a reference."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.SpreadsheetTemplateCollection","3":[{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.SpreadsheetTemplateListResponse","6":"Retrieves a list of spreadsheet templates for a content owner."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.SpreadsheetTemplateListResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of spreadsheet templates for a content owner."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.UploaderCollection","3":[{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.UploaderListResponse","6":"Retrieves a list of uploaders for a content owner."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.UploaderListResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of uploaders for a content owner."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.ValidatorCollection","3":[{"1":"validate","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateResponse","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.ValidateRequest"}],"6":"Validate a metadata file."},{"1":"validate","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateResponse","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.ValidateRequest"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Validate a metadata file."},{"1":"validateAsync","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateAsyncResponse","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.ValidateAsyncRequest"}],"6":"Validate a metadata file asynchronously."},{"1":"validateAsync","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateAsyncResponse","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.ValidateAsyncRequest"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Validate a metadata file asynchronously."},{"1":"validateAsyncStatus","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateStatusResponse","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.ValidateStatusRequest"}],"6":"Get the asynchronous validation status."},{"1":"validateAsyncStatus","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateStatusResponse","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.ValidateStatusRequest"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Get the asynchronous validation status."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.VideoAdvertisingOptionsCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOption","3":[{"1":"videoId","2":"String","3":"The videoId parameter specifies the YouTube video ID of the video for which you are retrieving advertising settings."}],"6":"Retrieves advertising settings for the specified video."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOption","3":[{"1":"videoId","2":"String","3":"The videoId parameter specifies the YouTube video ID of the video for which you are retrieving advertising settings."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves advertising settings for the specified video."},{"1":"getEnabledAds","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOptionGetEnabledAdsResponse","3":[{"1":"videoId","2":"String","3":"The videoId parameter specifies the YouTube video ID of the video for which you are retrieving advertising options."}],"6":"Retrieves details about the types of allowed ads for a specified partner- or user-uploaded video."},{"1":"getEnabledAds","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOptionGetEnabledAdsResponse","3":[{"1":"videoId","2":"String","3":"The videoId parameter specifies the YouTube video ID of the video for which you are retrieving advertising options."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves details about the types of allowed ads for a specified partner- or user-uploaded video."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOption","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.VideoAdvertisingOption"},{"1":"videoId","2":"String","3":"The videoId parameter specifies the YouTube video ID of the video for which you are updating advertising settings."}],"6":"Updates the advertising settings for the specified video. This method supports patch semantics."},{"1":"patch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOption","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.VideoAdvertisingOption"},{"1":"videoId","2":"String","3":"The videoId parameter specifies the YouTube video ID of the video for which you are updating advertising settings."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates the advertising settings for the specified video. This method supports patch semantics."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOption","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.VideoAdvertisingOption"},{"1":"videoId","2":"String","3":"The videoId parameter specifies the YouTube video ID of the video for which you are updating advertising settings."}],"6":"Updates the advertising settings for the specified video."},{"1":"update","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOption","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.VideoAdvertisingOption"},{"1":"videoId","2":"String","3":"The videoId parameter specifies the YouTube video ID of the video for which you are updating advertising settings."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates the advertising settings for the specified video."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Collection.WhitelistsCollection","3":[{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Whitelist","3":[{"1":"id","2":"String","3":"The id parameter specifies the YouTube channel ID of the whitelisted channel being retrieved."}],"6":"Retrieves a specific whitelisted channel by ID."},{"1":"get","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Whitelist","3":[{"1":"id","2":"String","3":"The id parameter specifies the YouTube channel ID of the whitelisted channel being retrieved."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a specific whitelisted channel by ID."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Whitelist","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Whitelist"}],"6":"Whitelist a YouTube channel for your content owner. Whitelisted channels are channels that are not owned or managed by you, but you would like to whitelist so that no claims from your assets are placed on videos uploaded to these channels."},{"1":"insert","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Whitelist","3":[{"1":"resource","2":"YoutubePartner.V1.Schema.Whitelist"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Whitelist a YouTube channel for your content owner. Whitelisted channels are channels that are not owned or managed by you, but you would like to whitelist so that no claims from your assets are placed on videos uploaded to these channels."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.WhitelistListResponse","6":"Retrieves a list of whitelisted channels for a content owner."},{"1":"list","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.WhitelistListResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieves a list of whitelisted channels for a content owner."},{"1":"remove","2":"void","3":[{"1":"id","2":"String","3":"The id parameter specifies the YouTube channel ID of the channel being removed from whitelist."}],"6":"Removes a whitelisted channel for a content owner."},{"1":"remove","2":"void","3":[{"1":"id","2":"String","3":"The id parameter specifies the YouTube channel ID of the channel being removed from whitelist."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Removes a whitelisted channel for a content owner."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AdBreak","2":[{"1":"midrollSeconds","2":"Integer","3":1,"6":"The time of the ad break specified as the number of seconds after the start of the video when the break occurs."},{"1":"position","2":"String","3":1,"6":"The point at which the break occurs during the video playback."},{"1":"slot","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AdSlot[]","3":1,"6":"A list of ad slots that occur in an ad break. Ad slots let you specify the number of ads that should run in each break."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AdSlot","2":[{"1":"id","2":"String","3":1,"6":"A value that identifies the ad slot to the ad server."},{"1":"type","2":"String","3":1,"6":"The type of ad that runs in the slot. The value may affect YouTube's fallback behavior if the third-party platform does not return ads."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AllowedAdvertisingOptions","2":[{"1":"adsOnEmbeds","2":"Boolean","3":1,"6":"This setting indicates whether the partner can display ads when videos run in an embedded player."},{"1":"kind","2":"String","3":1,"6":"This property identifies the resource type. Its value is youtubePartner#allowedAdvertisingOptions."},{"1":"licAdFormats","2":"String[]","3":1,"6":"A list of ad formats that the partner is allowed to use for its uploaded videos."},{"1":"ugcAdFormats","2":"String[]","3":1,"6":"A list of ad formats that the partner is allowed to use for claimed, user-uploaded content."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset","2":[{"1":"aliasId","2":"String[]","3":1,"6":"A list of asset IDs that can be used to refer to the asset. The list contains values if the asset represents multiple constituent assets that have been merged. In that case, any of the asset IDs originally assigned to the constituent assets could be used to update the master, or synthesized, asset."},{"1":"id","2":"String","3":1,"6":"An ID that YouTube assigns and uses to uniquely identify the asset."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For asset resources, the value is youtubePartner#asset."},{"1":"label","2":"String[]","3":1,"6":"A list of asset labels on the asset."},{"1":"matchPolicy","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","3":1,"6":"The matchPolicy object contains information about the asset's match policy, which YouTube applies to user-uploaded videos that match the asset."},{"1":"matchPolicyEffective","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","3":1},{"1":"matchPolicyMine","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","3":1},{"1":"metadata","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Metadata","3":1,"6":"The metadata object contains information that identifies and describes the asset. This information could be used to search for the asset or to eliminate duplication within YouTube's database."},{"1":"metadataEffective","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Metadata","3":1},{"1":"metadataMine","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Metadata","3":1},{"1":"ownership","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","3":1,"6":"The ownership object identifies an asset's owners and provides additional details about their ownership, such as the territories where they own the asset."},{"1":"ownershipConflicts","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.OwnershipConflicts","3":1,"6":"The ownershipConflicts object contains information about the asset's ownership conflicts."},{"1":"ownershipEffective","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","3":1},{"1":"ownershipMine","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","3":1},{"1":"status","2":"String","3":1,"6":"The asset's status."},{"1":"timeCreated","2":"String","3":1,"6":"The date and time the asset was created. The value is specified in RFC 3339 (YYYY-MM-DDThh:mm:ss.000Z) format."},{"1":"type","2":"String","3":1,"6":"The asset's type. This value determines the metadata fields that you can set for the asset. In addition, certain API functions may only be supported for specific types of assets. For example, composition assets may have more complex ownership data than other types of assets."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetLabel","2":[{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For assetLabel resources, this value is youtubePartner#assetLabel."},{"1":"labelName","2":"String","3":1,"6":"Name of the asset label."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetLabelListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetLabel[]","3":1,"6":"A list of assetLabel resources that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#assetLabelList."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Asset[]","3":1,"6":"A list of asset resources that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#assetList."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetMatchPolicy","2":[{"1":"kind","2":"String","3":1,"6":"The type of the API resource. Value: youtubePartner#assetMatchPolicy."},{"1":"policyId","2":"String","3":1,"6":"A value that uniquely identifies the Policy resource that YouTube applies to user-uploaded videos that match the asset."},{"1":"rules","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PolicyRule[]","3":1,"6":"A list of rules that collectively define the policy that the content owner wants to apply to user-uploaded videos that match the asset. Each rule specifies the action that YouTube should take and may optionally specify the conditions under which that action is enforced."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetRelationship","2":[{"1":"childAssetId","2":"String","3":1,"6":"The ID of the child (contained) asset."},{"1":"id","2":"String","3":1,"6":"A value that YouTube assigns and uses to uniquely identify the asset relationship."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this resource, the value is youtubePartner#assetRelationship."},{"1":"parentAssetId","2":"String","3":1,"6":"The ID of the parent (containing) asset."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetRelationshipListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetRelationship[]","3":1,"6":"A list of assetRelationship resources that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#assetRelationshipList."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the next page of results."},{"1":"pageInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","3":1,"6":"The pageInfo object encapsulates paging information for the result set."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetSearchResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetSnippet[]","3":1,"6":"A list of asset resources that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#assetSnippetList."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the next page of results."},{"1":"pageInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","3":1,"6":"The pageInfo object encapsulates paging information for the result set."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetShare","2":[{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this resource, the value is youtubePartner#assetShare."},{"1":"shareId","2":"String","3":1,"6":"A value that YouTube assigns and uses to uniquely identify the asset share."},{"1":"viewId","2":"String","3":1,"6":"A value that YouTube assigns and uses to uniquely identify the asset view."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetShareListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetShare[]","3":1,"6":"An assetShare resource that matches the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#assetShareList."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the next page of results."},{"1":"pageInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","3":1,"6":"The pageInfo object encapsulates paging information for the result set."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.AssetSnippet","2":[{"1":"customId","2":"String","3":1,"6":"Custom ID assigned by the content owner to this asset."},{"1":"id","2":"String","3":1,"6":"An ID that YouTube assigns and uses to uniquely identify the asset."},{"1":"isrc","2":"String","3":1,"6":"The ISRC (International Standard Recording Code) for this asset."},{"1":"iswc","2":"String","3":1,"6":"The ISWC (International Standard Musical Work Code) for this asset."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this operation, the value is youtubePartner#assetSnippet."},{"1":"timeCreated","2":"String","3":1,"6":"The date and time the asset was created. The value is specified in RFC 3339 (YYYY-MM-DDThh:mm:ss.000Z) format."},{"1":"title","2":"String","3":1,"6":"Title of this asset."},{"1":"type","2":"String","3":1,"6":"The asset's type. This value determines which metadata fields might be included in the metadata object."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign","2":[{"1":"campaignData","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignData","3":1,"6":"The campaignData object contains details like the campaign's start and end dates, target and source."},{"1":"id","2":"String","3":1,"6":"The unique ID that YouTube uses to identify the campaign."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For campaign resources, this value is youtubePartner#campaign."},{"1":"status","2":"String","3":1,"6":"The status of the campaign."},{"1":"timeCreated","2":"String","3":1,"6":"The time the campaign was created."},{"1":"timeLastModified","2":"String","3":1,"6":"The time the campaign was last modified."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignData","2":[{"1":"campaignSource","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignSource","3":1,"6":"The campaignSource object contains information about the assets for which the campaign will generate links."},{"1":"expireTime","2":"String","3":1,"6":"The time at which the campaign should expire. Do not specify a value if the campaign has no expiration time."},{"1":"name","2":"String","3":1,"6":"The user-given name of the campaign."},{"1":"promotedContent","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PromotedContent[]","3":1,"6":"A list of videos or channels that will be linked to from claimed videos that are included in the campaign."},{"1":"startTime","2":"String","3":1,"6":"The time at which the campaign should start. Do not specify a value if the campaign should start immediately."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignList","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Campaign[]","3":1,"6":"A list of campaigns."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#campaignList."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignSource","2":[{"1":"sourceType","2":"String","3":1,"6":"The type of the campaign source."},{"1":"sourceValue","2":"String[]","3":1,"6":"A list of values of the campaign source."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignTargetLink","2":[{"1":"targetId","2":"String","3":1,"6":"The channel ID or video ID of the link target."},{"1":"targetType","2":"String","3":1,"6":"Indicates whether the link target is a channel or video."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim","2":[{"1":"appliedPolicy","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","3":1,"6":"The applied policy for the viewing owner on the claim. This might not be the same as the final claim policy on the video as it does not consider other partners' policy of the same claim."},{"1":"assetId","2":"String","3":1,"6":"The unique YouTube asset ID that identifies the asset associated with the claim."},{"1":"blockOutsideOwnership","2":"Boolean","3":1,"6":"Indicates whether or not the claimed video should be blocked anywhere it is not explicitly owned."},{"1":"contentType","2":"String","3":1,"6":"This value indicates whether the claim covers the audio, video, or audiovisual portion of the claimed content."},{"1":"id","2":"String","3":1,"6":"The ID that YouTube assigns and uses to uniquely identify the claim."},{"1":"isPartnerUploaded","2":"Boolean","3":1,"6":"Indicates whether or not the claim is a partner uploaded claim."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For claim resources, this value is youtubePartner#claim."},{"1":"matchInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimMatchInfo","3":1,"6":"If this claim was auto-generated based on a provided reference, this section will provide details of the match that generated the claim."},{"1":"origin","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimOrigin","3":1},{"1":"policy","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","3":1,"6":"The policy provided by the viewing owner on the claim."},{"1":"status","2":"String","3":1,"6":"The claim's status. When updating a claim, you can update its status from active to inactive to effectively release the claim, but the API does not support other updates to a claim's status."},{"1":"timeCreated","2":"String","3":1,"6":"The time the claim was created."},{"1":"videoId","2":"String","3":1,"6":"The unique YouTube video ID that identifies the video associated with the claim."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimEvent","2":[{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For claimEvent resources, this value is youtubePartner#claimEvent."},{"1":"reason","2":"String","3":1,"6":"Reason of the event."},{"1":"source","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimEventSource","3":1,"6":"Data related to source of the event."},{"1":"time","2":"String","3":1,"6":"The time when the event occurred."},{"1":"type","2":"String","3":1,"6":"Type of the event."},{"1":"typeDetails","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimEventTypeDetails","3":1,"6":"Details of event's type."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimEventSource","2":[{"1":"contentOwnerId","2":"String","3":1,"6":"Id of content owner that initiated the event."},{"1":"type","2":"String","3":1,"6":"Type of the event source."},{"1":"userEmail","2":"String","3":1,"6":"Email of user who initiated the event."}],"6":"Data related to source of the event."},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimEventTypeDetails","2":[{"1":"appealExplanation","2":"String","3":1,"6":"Appeal explanations for dispute_appeal event."},{"1":"disputeNotes","2":"String","3":1,"6":"Dispute notes for dispute_create events."},{"1":"disputeReason","2":"String","3":1,"6":"Dispute reason for dispute_create and dispute_appeal events."},{"1":"updateStatus","2":"String","3":1,"6":"Status that was a result of update for claim_update event."}],"6":"Details of event's type."},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimHistory","2":[{"1":"event","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimEvent[]","3":1,"6":"A list of claim history events."},{"1":"id","2":"String","3":1,"6":"The ID that YouTube assigns and uses to uniquely identify the claim."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For claimHistory resources, this value is youtubePartner#claimHistory."},{"1":"uploaderChannelId","2":"String","3":1,"6":"The external channel id of claimed video's uploader."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Claim[]","3":1,"6":"A list of claims that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#claimList."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set."},{"1":"pageInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","3":1,"6":"The pageInfo object encapsulates paging information for the result set."},{"1":"previousPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimMatchInfo","2":[{"1":"longestMatch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimMatchInfoLongestMatch","3":1,"6":"Details of the longest match between the reference and the user video."},{"1":"matchSegments","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.MatchSegment[]","3":1,"6":"Details about each match segment. Each item in the list contains information about one match segment associated with the claim. It is possible to have multiple match segments. For example, if the audio and video content of an uploaded video match that of a reference video, there would be two match segments. One segment would describe the audio match and the other would describe the video match."},{"1":"referenceId","2":"String","3":1,"6":"The reference ID that generated this match."},{"1":"totalMatch","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimMatchInfoTotalMatch","3":1,"6":"Details of the total amount of reference and user video content which matched each other. Note these two values may differ if either the reference or the user video contains a loop."}],"6":"If this claim was auto-generated based on a provided reference, this section will provide details of the match that generated the claim."},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimMatchInfoLongestMatch","2":[{"1":"durationSecs","2":"String","3":1,"6":"The duration of the longest match between the reference and the user video."},{"1":"referenceOffset","2":"String","3":1,"6":"The offset in seconds into the reference at which the longest match began."},{"1":"userVideoOffset","2":"String","3":1,"6":"The offset in seconds into the user video at which the longest match began."}],"6":"Details of the longest match between the reference and the user video."},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimMatchInfoTotalMatch","2":[{"1":"referenceDurationSecs","2":"String","3":1,"6":"The total amount of content in the reference which matched the user video in seconds."},{"1":"userVideoDurationSecs","2":"String","3":1,"6":"The total amount of content in the user video which matched the reference in seconds."}],"6":"Details of the total amount of reference and user video content which matched each other. Note these two values may differ if either the reference or the user video contains a loop."},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimOrigin","2":[{"1":"source","2":"String","3":1}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimSearchResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimSnippet[]","3":1,"6":"A list of claims that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#claimSnippetList."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set."},{"1":"pageInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","3":1,"6":"The pageInfo object encapsulates paging information for the result set."},{"1":"previousPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimSnippet","2":[{"1":"assetId","2":"String","3":1,"6":"The unique YouTube asset ID that identifies the asset associated with the claim."},{"1":"contentType","2":"String","3":1,"6":"This value indicates whether the claim covers the audio, video, or audiovisual portion of the claimed content."},{"1":"id","2":"String","3":1,"6":"The ID that YouTube assigns and uses to uniquely identify the claim."},{"1":"isPartnerUploaded","2":"Boolean","3":1,"6":"Indicates whether or not the claim is a partner uploaded claim."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this operation, the value is youtubePartner#claimSnippet."},{"1":"origin","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimSnippetOrigin","3":1},{"1":"status","2":"String","3":1,"6":"The claim's status."},{"1":"thirdPartyClaim","2":"Boolean","3":1,"6":"Indicates that this is a third party claim."},{"1":"timeCreated","2":"String","3":1,"6":"The time the claim was created."},{"1":"timeStatusLastModified","2":"String","3":1,"6":"The time the claim status and/or status detail was last modified."},{"1":"videoId","2":"String","3":1,"6":"The unique YouTube video ID that identifies the video associated with the claim."},{"1":"videoTitle","2":"String","3":1,"6":"The title of the claimed video."},{"1":"videoViews","2":"String","3":1,"6":"Number of views for the claimed video."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimSnippetOrigin","2":[{"1":"source","2":"String","3":1}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimedVideoDefaults","2":[{"1":"autoGeneratedBreaks","2":"Boolean","3":1,"6":"Set this property to true to enable automatically generated breaks for a newly claimed video longer than 10 minutes. The first partner that claims the video sets its default advertising options to that video. claimedVideoOptions.auto_generated_breaks_default"},{"1":"channelOverride","2":"Boolean","3":1,"6":"Set this property to true to indicate that the channel's claimedVideoOptions can override the content owner's claimedVideoOptions."},{"1":"kind","2":"String","3":1,"6":"Identifies this resource as default options for newly claimed video. Value: \"youtubePartner#claimedVideoDefaults\"."},{"1":"newVideoDefaults","2":"String[]","3":1,"6":"A list of ad formats that could be used as the default settings for a newly claimed video. The first partner that claims the video sets its default advertising options to that video."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Conditions","2":[{"1":"contentMatchType","2":"String[]","3":1,"6":"This match condition specifies whether the user- or partner-uploaded content needs to match the audio, video or audiovisual content of a reference file for the rule to apply."},{"1":"matchDuration","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.IntervalCondition[]","3":1,"6":"This match condition specifies an amount of time that the user- or partner- uploaded content needs to match a reference file for the rule to apply."},{"1":"matchPercent","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.IntervalCondition[]","3":1,"6":"This match condition specifies a percentage of the user- or partner-uploaded content that needs to match a reference file for the rule to apply."},{"1":"referenceDuration","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.IntervalCondition[]","3":1,"6":"This match condition indicates that the reference must be a certain duration for the rule to apply."},{"1":"referencePercent","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.IntervalCondition[]","3":1,"6":"This match condition indicates that the specified percentage of a reference file must match the user- or partner-uploaded content for the rule to apply."},{"1":"requiredTerritories","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryCondition","3":1,"6":"This watch condition specifies where users are (or or not) allowed to watch (or listen to) an asset. YouTube determines whether the condition is satisfied based on the user's location."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ConflictingOwnership","2":[{"1":"owner","2":"String","3":1,"6":"The ID of the conflicting asset's owner."},{"1":"ratio","2":"Number","3":1,"6":"The percentage of the asset that the owner controls or administers."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwner","2":[{"1":"conflictNotificationEmail","2":"String","3":1,"6":"The email address visible to other partners for use in managing asset ownership conflicts."},{"1":"displayName","2":"String","3":1,"6":"The content owner's display name."},{"1":"disputeNotificationEmails","2":"String[]","3":1,"6":"The email address(es) to which YouTube sends claim dispute notifications and possible claim notifications."},{"1":"fingerprintReportNotificationEmails","2":"String[]","3":1,"6":"The email address(es) to which YouTube sends fingerprint reports."},{"1":"id","2":"String","3":1,"6":"A unique ID that YouTube uses to identify the content owner."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For content owner resources, the value is youtubePartner#contentOwner."},{"1":"primaryNotificationEmails","2":"String[]","3":1,"6":"The email address(es) to which YouTube sends CMS account details and report notifications."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerAdvertisingOption","2":[{"1":"allowedOptions","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AllowedAdvertisingOptions","3":1,"6":"This object identifies the ad formats that the content owner is allowed to use."},{"1":"claimedVideoOptions","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ClaimedVideoDefaults","3":1,"6":"This object identifies the advertising options used by default for the content owner's newly claimed videos."},{"1":"id","2":"String","3":1,"6":"The value that YouTube uses to uniquely identify the content owner."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this resource, the value is youtubePartner#contentOwnerAdvertisingOption."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwnerListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ContentOwner[]","3":1,"6":"A list of content owners that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#contentOwnerList."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.CountriesRestriction","2":[{"1":"adFormats","2":"String[]","3":1,"6":"A list of ad formats that can be used in the specified countries."},{"1":"territories","2":"String[]","3":1,"6":"A list of ISO 3166-1 alpha-2 country codes that identify the countries where ads are enabled."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.CuepointSettings","2":[{"1":"cueType","2":"String","3":1,"6":"The cuepoint's type. See the Getting started guide for an explanation of the different types of cuepoints. Also see the Life of a broadcast document for best practices about inserting cuepoints during your broadcast."},{"1":"durationSecs","2":"Integer","3":1,"6":"The cuepoint's duration, in seconds. This value must be specified if the cueType is ad and is ignored otherwise."},{"1":"offsetTimeMs","2":"String","3":1,"6":"This value specifies a point in time in the video when viewers should see an ad or in-stream slate. The property value identifies a time offset, in milliseconds, from the beginning of the monitor stream. Though measured in milliseconds, the value is actually an approximation, and YouTube will insert the cuepoint as closely as possible to that time. You should not specify a value for this parameter if your broadcast does not have a monitor stream.\n\nThis property's default value is 0, which indicates that the cuepoint should be inserted as soon as possible. If your broadcast stream is not delayed, then 0 is also the only valid value. However, if your broadcast stream is delayed, then the property value can specify the time when the cuepoint should be inserted. See the Getting started guide for more details.\n\nNote: If your broadcast had a testing phase, the offset is measured from the time that the testing phase began."},{"1":"walltime","2":"String","3":1,"6":"This value specifies the wall clock time at which the cuepoint should be inserted. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sssZ) format."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Date","2":[{"1":"day","2":"Integer","3":1,"6":"The date's day. The value should be an integer between 1 and 31. Note that some day-month combinations are not valid."},{"1":"month","2":"Integer","3":1,"6":"The date's month. The value should be an integer between 1 and 12."},{"1":"year","2":"Integer","3":1,"6":"The date's year in the Gregorian Calendar. Assumed to be A.D."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.DateRange","2":[{"1":"end","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Date","3":1,"6":"The end date (inclusive) for the date range. This value is required for video-on-demand (VOD) orders and optional for electronic sell-through (EST) orders."},{"1":"kind","2":"String","3":1,"6":"Identifies this resource as order date range. Value: \"youtubePartner#dateRange\"."},{"1":"start","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Date","3":1,"6":"The start date for the date range. This value is required for all date ranges."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ExcludedInterval","2":[{"1":"high","2":"Number","3":1,"6":"The end (inclusive) time in seconds of the time window. The value can be any value greater than low. If high is greater than the length of the reference, the interval between low and the end of the reference will be excluded. Every interval must specify a value for this field."},{"1":"low","2":"Number","3":1,"6":"The start (inclusive) time in seconds of the time window. The value can be any value between 0 and high. Every interval must specify a value for this field."},{"1":"origin","2":"String","3":1,"6":"The source of the request to exclude the interval from Content ID matching."},{"1":"timeCreated","2":"String","3":1,"6":"The date and time that the exclusion was created. The value is specified in RFC 3339 (YYYY-MM-DDThh:mm:ss.000Z) format."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.IntervalCondition","2":[{"1":"high","2":"Number","3":1,"6":"The maximum (inclusive) allowed value for the condition to be satisfied. The default value is \u221e."},{"1":"low","2":"Number","3":1,"6":"The minimum (inclusive) allowed value for the condition to be satisfied. The default value is -\u221e."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.LiveCuepoint","2":[{"1":"broadcastId","2":"String","3":1,"6":"The ID that YouTube assigns to uniquely identify the broadcast into which the cuepoint is being inserted."},{"1":"id","2":"String","3":1,"6":"A value that YouTube assigns to uniquely identify the cuepoint."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For liveCuepoint resources, the value is youtubePartner#liveCuepoint."},{"1":"settings","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CuepointSettings","3":1,"6":"The settings object defines the cuepoint's settings."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.MatchSegment","2":[{"1":"channel","2":"String","3":1,"6":"Identifies the manner in which the claimed video matches the reference video."},{"1":"reference_segment","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Segment","3":1,"6":"The reference_segment object contains information about the matched portion of the reference content."},{"1":"video_segment","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Segment","3":1,"6":"The video_segment object contains information about the matched portion of the claimed video."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Metadata","2":[{"1":"actor","2":"String[]","3":1,"6":"A list that identifies actors associated with the asset. You can specify up to 50 actors for an asset."},{"1":"album","2":"String","3":1,"6":"The album on which a sound recording asset is included. This field is only valid for sound recording assets and has a maximum length of 255 bytes."},{"1":"artist","2":"String[]","3":1,"6":"The artist associated with a music video or sound recording asset. This field is only valid for music video and sound recording assets. It is required for sound recordings included in the AudioSwap program."},{"1":"broadcaster","2":"String[]","3":1,"6":"Identifies the network or channel that originally broadcast a show or a season of a show. This field should only be included for an asset if the broadcaster associated with the asset is different from the partner uploading the asset to YouTube. Note that a show may have multiple broadcasters; for example, a show may switch networks between seasons."},{"1":"category","2":"String","3":1,"6":"Category of this asset."},{"1":"contentType","2":"String","3":1,"6":"The type of video content that the asset represents. This field is only valid for movie and episode assets, and is required for the following types of those assets:  \n- Episode assets that are linked to a show \n- Movie assets that appear in YouTube's Movies category"},{"1":"copyrightDate","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Date","3":1,"6":"The date copyright for this asset was established. *"},{"1":"customId","2":"String","3":1,"6":"A unique value that you, the metadata provider, use to identify an asset. The value could be a unique ID that you created for the asset or a standard identifier, such as an ISRC. The value has a maximum length of 64 bytes and may contain alphanumeric characters, hyphens (-), underscores (_), periods (.), \"at\" symbols (@), or forward slashes (/)."},{"1":"description","2":"String","3":1,"6":"A description of the asset. The description may be displayed on YouTube or in CMS. This field has a maximum length of 5,000 bytes."},{"1":"director","2":"String[]","3":1,"6":"A list that identifies directors associated with the asset. You can specify up to 50 directors for an asset."},{"1":"eidr","2":"String","3":1,"6":"The Entertainment Identifier Registry (EIDR) assigned to an asset. This value is only used for episode and movie assets and is optional in both cases. The value contains a standard prefix for EIDR registry, followed by a forward slash, a 20-character hexadecimal string, and an alphanumeric (0-9A-Z) check character."},{"1":"endYear","2":"Integer","3":1,"6":"The last year that a television show aired. This value is only used for show assets, for which it is optional. Do not specify a value if new show episodes are still being created."},{"1":"episodeNumber","2":"String","3":1,"6":"The episode number associated with an episode asset. This field is required for and only used for episode assets that are linked to show assets. It has a maximum length of 5 bytes."},{"1":"episodesAreUntitled","2":"Boolean","3":1,"6":"This value indicates that the episodes associated with a particular show asset or a particular season asset are untitled. An untitled show (or season) has episodes which are identified by their episode number or date. If this field is set to true, then YouTube will optimize the title displayed for associated episodes."},{"1":"genre","2":"String[]","3":1,"6":"This field specifies a genre that can be used to categorize an asset. Assets may be categorized in more than one genre, and YouTube uses different sets of genres to categorize different types of assets. For example, Soaps might be a valid genre for a show but not for a movie or sound recording.  \n- Show assets \n- Movie assets that appear in YouTube's Movies category \n- Sound recordings included in the AudioSwap program"},{"1":"grid","2":"String","3":1,"6":"The GRID (Global Release Identifier) of a music video or sound recording. This field's value must contain exactly 18 alphanumeric characters."},{"1":"hfa","2":"String","3":1,"6":"The six-character Harry Fox Agency (HFA) song code issued to uniquely identify a composition. This value is only valid for composition assets."},{"1":"infoUrl","2":"String","3":1,"6":"An official URL associated with the asset. This field has a maximum length of 1536 bytes. Please do not submit a 1537-byte URL. Your efforts would be futile."},{"1":"isan","2":"String","3":1,"6":"The ISAN (International Standard Audiovisual Number) for the asset. This value is only used for episode and movie assets and is optional in both cases. The value contains 26 characters, which includes the 24 hexadecimal characters of the ISAN as well as two check characters, in the following format:  \n- The first 16 characters in the tag value contain hexadecimal characters specifying the 'root' and 'episode' components of the ISAN. \n- The seventeenth character is a check character (a letter from A-Z). \n- Characters 18 to 25 are the remaining eight characters of the ISAN, which specify the 'version' component of the ISAN. \n- The twenty-sixth character is another check character (A-Z)."},{"1":"isrc","2":"String","3":1,"6":"The ISRC (International Standard Recording Code) of a music video or sound recording asset. This field's value must contain exactly 12 alphanumeric characters."},{"1":"iswc","2":"String","3":1,"6":"The ISWC (International Standard Musical Work Code) for a composition asset. The field's value must contain exactly 11 characters in the format of a letter (T) followed by 10 digits."},{"1":"keyword","2":"String[]","3":1,"6":"A list of up to 100 keywords associated with a show asset. This field is required for and also only used for show assets."},{"1":"label","2":"String","3":1,"6":"The record label that released a sound recording asset. This field is only valid for sound recording assets and has a maximum length of 255 bytes."},{"1":"notes","2":"String","3":1,"6":"Additional information that does not map directly to one of the other metadata fields. This field has a maximum length of 255 bytes."},{"1":"originalReleaseMedium","2":"String","3":1,"6":"The method by which people first had the opportunity to see a video asset. This value is only used for episode and movie assets. It is required for the assets listed below and otherwise optional:  \n- Episode assets that are linked to a show \n- Movie assets that appear in YouTube's Movies category"},{"1":"producer","2":"String[]","3":1,"6":"A list that identifies producers of the asset. You can specify up to 50 producers for an asset."},{"1":"ratings","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Rating[]","3":1,"6":"A list of ratings that an asset received. The rating must be valid under the specified rating system."},{"1":"releaseDate","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Date","3":1,"6":"The date that an asset was publicly released. For season assets, this value specifies the first date that the season aired. Dates prior to the year 1902 are not supported. This value is valid for episode, season, movie, music video, and sound recording assets. It is required for the assets listed below and otherwise optional:  \n- Episode assets that are linked to a show \n- Movie assets that appear in YouTube's Movies category"},{"1":"seasonNumber","2":"String","3":1,"6":"The season number that identifies a season asset, or the season number that is associated with an episode asset. This field has a maximum length of 5 bytes."},{"1":"showCustomId","2":"String","3":1,"6":"The customId of the show asset that a season or episode asset is associated with. It is required for season and episode assets that appear in the Shows category on YouTube, and it is not valid for other types of assets. This field has a maximum length of 64 bytes and may contain alphanumeric characters, hyphens (-), underscores (_), periods (.), \"at\" symbols (@), or forward slashes (/)."},{"1":"showTitle","2":"String","3":1,"6":"The name of the show that an episode asset is associated with. Note: This tag is only used for and valid for episodes that are not associated with show assets and enables those assets to still display a show title in the asset metadata section of CMS. This field has a maximum length of 120 bytes."},{"1":"spokenLanguage","2":"String","3":1,"6":"The video's primary spoken language. The value can be any ISO 639-1 two-letter language code. This value is only used for episode and movie assets and is not valid for other types of assets."},{"1":"startYear","2":"Integer","3":1,"6":"The first year that a television show aired. This value is required for and also only used for show assets."},{"1":"subtitledLanguage","2":"String[]","3":1,"6":"A list of languages for which the video has either a separate caption track or burnt-in captions that are part of the video. Each value in the list should be an ISO 639-1 two-letter language code. This value is only used for episode and movie assets and is not valid for other types of assets."},{"1":"title","2":"String","3":1,"6":"The asset's title or name. The value has a maximum length of 255 bytes. This value is required for the assets listed below and optional for all other assets:  \n- Show assets \n- Episode assets that are linked to a show \n- Movie assets that appear in YouTube's Movies category \n- Sound recordings included in the AudioSwap program"},{"1":"tmsId","2":"String","3":1,"6":"TMS (Tribune Media Systems) ID for the asset."},{"1":"totalEpisodesExpected","2":"Integer","3":1,"6":"Specifies the total number of full-length episodes in the season. This value is used only for season assets."},{"1":"upc","2":"String","3":1,"6":"The UPC (Universal Product Code) associated with the asset."},{"1":"writer","2":"String[]","3":1,"6":"A list that identifies writers associated with the asset. You can specify up to 50 writers for an asset."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.MetadataHistory","2":[{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For metadata history resources, the value is youtubePartner#metadataHistory."},{"1":"metadata","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Metadata","3":1,"6":"The metadata object contains the metadata provided by the specified source (origination) at the specified time (timeProvided)."},{"1":"origination","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Origination","3":1,"6":"The origination object contains information that describes the metadata source."},{"1":"timeProvided","2":"String","3":1,"6":"The time the metadata was provided."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.MetadataHistoryListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.MetadataHistory[]","3":1,"6":"A list of metadata history (youtubePartner#metadataHistory) resources that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#metadataHistoryList."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order","2":[{"1":"availGroupId","2":"String","3":1,"6":"Links an order to the avails associated with it."},{"1":"channelId","2":"String","3":1,"6":"Channel ID - identifies the channel this order and video are associated with"},{"1":"contentType","2":"String","3":1,"6":"Type of content possible values are \n- MOVIE\n- SHOW"},{"1":"country","2":"String","3":1,"6":"Two letter country code for the order only countries where YouTube does transactional business are allowed."},{"1":"customId","2":"String","3":1,"6":"Secondary id to be used to identify content in other systems like partner database"},{"1":"dvdReleaseDate","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Date","3":1,"6":"Date when this content was first made available on DVD"},{"1":"estDates","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.DateRange","3":1,"6":"Range of time content is to be available for rental."},{"1":"events","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.StateCompleted[]","3":1,"6":"History log of events for this order"},{"1":"id","2":"String","3":1,"6":"Order Id unique identifier for an order."},{"1":"kind","2":"String","3":1,"6":"Identifies this resource as order. Value: \"youtubePartner#order\"."},{"1":"movie","2":"String","3":1,"6":"Title if the order is type movie."},{"1":"originalReleaseDate","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Date","3":1,"6":"Date when this content was first made available to the public"},{"1":"priority","2":"String","3":1,"6":"The priority for the order in the QC review queue once the content is ready for QC."},{"1":"productionHouse","2":"String","3":1,"6":"Post production house that is to process this order"},{"1":"purchaseOrder","2":"String","3":1,"6":"Youtube purchase order reference for the post production house."},{"1":"requirements","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Requirements","3":1,"6":"Minumim set of requirements for this order to be complete such as is a trailer required."},{"1":"show","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ShowDetails","3":1,"6":"Details of a show, show name, season number, episode etc."},{"1":"status","2":"String","3":1,"6":"The order's status."},{"1":"videoId","2":"String","3":1,"6":"Video ID the video that this order is associated with if any."},{"1":"vodDates","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.DateRange","3":1,"6":"Range of time content is to be available for purchase."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.OrderListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Order[]","3":1,"6":"A list of orders that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#orderList."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set."},{"1":"pageInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","3":1,"6":"The pageInfo object encapsulates paging information for the result set."},{"1":"previousPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Origination","2":[{"1":"owner","2":"String","3":1,"6":"The content owner who provided the metadata or ownership information."},{"1":"source","2":"String","3":1,"6":"The mechanism by which the piece of metadata, ownership or relationship information was provided."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.OwnershipConflicts","2":[{"1":"general","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryConflicts[]","3":1,"6":"A list that identifies ownership conflicts of an asset and the territories where conflicting ownership is inserted."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For ownershipConflicts resources, the value is youtubePartner#ownershipConflicts."},{"1":"mechanical","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryConflicts[]","3":1,"6":"A list that identifies ownership conflicts of the mechanical rights for a composition asset and the territories where conflicting ownership is inserted."},{"1":"performance","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryConflicts[]","3":1,"6":"A list that identifies ownership conflicts of the performance rights for a composition asset and the territories where conflicting ownership is inserted."},{"1":"synchronization","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryConflicts[]","3":1,"6":"A list that identifies ownership conflicts of the synchronization rights for a composition asset and the territories where conflicting ownership is inserted."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.OwnershipHistoryListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnershipHistory[]","3":1,"6":"A list of ownership history (youtubePartner#ownershipHistory) resources that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#ownershipHistoryList."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Package","2":[{"1":"content","2":"String","3":1,"6":"The package's metadata file contents."},{"1":"customIds","2":"String[]","3":1,"6":"The list of customer IDs."},{"1":"id","2":"String","3":1,"6":"An ID that YouTube assigns and uses to uniquely identify the package."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For package resources, this value is youtubePartner#package."},{"1":"locale","2":"String","3":1,"6":"The desired locale of the error messages as defined in BCP 47 (http://tools.ietf.org/html/bcp47). For example, \"en-US\" or \"de\". If not specified we will return the error messages in English (\"en\")."},{"1":"name","2":"String","3":1,"6":"The package name."},{"1":"status","2":"String","3":1,"6":"The package status."},{"1":"statusReports","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.StatusReport[]","3":1,"6":"The package status reports."},{"1":"timeCreated","2":"String","3":1,"6":"The package creation time. The value is specified in RFC 3339 (YYYY-MM-DDThh:mm:ss.000Z) format."},{"1":"type","2":"String","3":1,"6":"The package type."},{"1":"uploaderName","2":"String","3":1,"6":"The uploader name."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.PackageInsertResponse","2":[{"1":"errors","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateError[]","3":1,"6":"The list of errors and/or warnings."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#packageInsert."},{"1":"resource","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Package","3":1,"6":"The package resource."},{"1":"status","2":"String","3":1,"6":"The package insert status. Indicates whether the insert operation completed successfully or identifies the general cause of failure. For most cases where the insert operation failed, the errors are described in the API response's errors object. However, if the operation failed because the package contained non-metadata files, the errors object is not included in the response."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","2":[{"1":"resultsPerPage","2":"Integer","3":1,"6":"The number of results included in the API response."},{"1":"startIndex","2":"Integer","3":1,"6":"The index of the first item in the API response."},{"1":"totalResults","2":"Integer","3":1,"6":"The total number of results in the result set."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy","2":[{"1":"description","2":"String","3":1,"6":"The policy's description."},{"1":"id","2":"String","3":1,"6":"A value that YouTube assigns and uses to uniquely identify the policy."},{"1":"kind","2":"String","3":1,"6":"Identifies this as a policy. Value: \"youtubePartner#policy\""},{"1":"name","2":"String","3":1,"6":"The policy's name."},{"1":"rules","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PolicyRule[]","3":1,"6":"A list of rules that specify the action that YouTube should take and may optionally specify the conditions under which that action is enforced."},{"1":"timeUpdated","2":"String","3":1,"6":"The time the policy was updated."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.PolicyList","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Policy[]","3":1,"6":"A list of saved policies."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#policyList."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.PolicyRule","2":[{"1":"action","2":"String","3":1,"6":"The policy that YouTube should enforce if the rule's conditions are all valid for an asset or for an attempt to view that asset on YouTube."},{"1":"conditions","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Conditions","3":1,"6":"A set of conditions that must be met for the rule's action (and subactions) to be enforced. For a rule to be valid, all of its conditions must be met."},{"1":"subaction","2":"String[]","3":1,"6":"A list of additional actions that YouTube should take if the conditions in the rule are met."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.PromotedContent","2":[{"1":"link","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CampaignTargetLink[]","3":1,"6":"A list of link targets that will be used to generate the annotation link that appears on videos included in the  campaign. If more than one link is specified, the link that is displayed to viewers will be randomly selected from the list."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Publisher","2":[{"1":"caeNumber","2":"String","3":1,"6":"The publisher's unique CAE (Compositeur, Auteur and Editeur) number."},{"1":"id","2":"String","3":1,"6":"A value that YouTube assigns and uses to uniquely identify the publisher."},{"1":"ipiNumber","2":"String","3":1,"6":"The publisher's unique IPI (Interested Parties Information) code."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this resource, the value is youtubePartner#publisher."},{"1":"name","2":"String","3":1,"6":"The publisher's name."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.PublisherList","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Publisher[]","3":1,"6":"A list of publishers that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#publisherList."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set."},{"1":"pageInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","3":1,"6":"The pageInfo object encapsulates paging information for the result set."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Rating","2":[{"1":"rating","2":"String","3":1,"6":"The rating that the asset received."},{"1":"ratingSystem","2":"String","3":1,"6":"The rating system associated with the rating."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference","2":[{"1":"assetId","2":"String","3":1,"6":"The ID that uniquely identifies the asset that the reference is associated with."},{"1":"audioswapEnabled","2":"Boolean","3":1,"6":"Set this field's value to true to indicate that the reference content should be included in YouTube's AudioSwap program."},{"1":"claimId","2":"String","3":1,"6":"This field is present if the reference was created by associating an asset with an existing YouTube video that was uploaded to a YouTube channel linked to your CMS account. In that case, this field contains the ID of the claim representing the resulting association between the asset and the video."},{"1":"contentType","2":"String","3":1,"6":"The type of content that the reference represents."},{"1":"duplicateLeader","2":"String","3":1,"6":"The ID that uniquely identifies the reference that this reference duplicates. This field is only present if the reference's status is inactive with reason REASON_DUPLICATE_FOR_OWNERS."},{"1":"excludedIntervals","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ExcludedInterval[]","3":1,"6":"The list of time intervals from this reference that will be ignored during the match process."},{"1":"fpDirect","2":"Boolean","3":1,"6":"When uploading a reference, set this value to true to indicate that the reference is a pre-generated fingerprint."},{"1":"hashCode","2":"String","3":1,"6":"The MD5 hashcode of the reference content. Deprecated! This is no longer populated."},{"1":"id","2":"String","3":1,"6":"A value that YouTube assigns and uses to uniquely identify a reference."},{"1":"ignoreFpMatch","2":"Boolean","3":1,"6":"Set this value to true to indicate that the reference should not be used to generate claims. This field is only used on AudioSwap references."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For reference resources, the value is youtubePartner#reference."},{"1":"length","2":"Number","3":1,"6":"The length of the reference in seconds."},{"1":"origination","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Origination","3":1,"6":"The origination object contains information that describes the reference source."},{"1":"status","2":"String","3":1,"6":"The reference's status."},{"1":"statusReason","2":"String","3":1,"6":"An explanation of how a reference entered its current state. This value is only present if the reference's status is either inactive or deleted."},{"1":"urgent","2":"Boolean","3":1,"6":"Set this value to true to indicate that YouTube should prioritize Content ID processing for a video file. YouTube processes urgent video files before other files that are not marked as urgent. This setting is primarily used for videos of live events or other videos that require time-sensitive processing. The sooner YouTube completes Content ID processing for a video, the sooner YouTube can match user-uploaded videos to that video.\n\nNote that marking all of your files as urgent could delay processing for those files."},{"1":"videoId","2":"String","3":1,"6":"This field is present if the reference was created by associating an asset with an existing YouTube video that was uploaded to a YouTube channel linked to your CMS account. In that case, this field contains the ID of the source video."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceConflict","2":[{"1":"conflictingReferenceId","2":"String","3":1,"6":"An id of a conflicting reference."},{"1":"expiryTime","2":"String","3":1,"6":"Conflict review expiry time."},{"1":"id","2":"String","3":1,"6":"A value that YouTube assigns and uses to uniquely identify a reference conflict."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For referenceConflict resources, the value is youtubePartner#referenceConflict."},{"1":"matches","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceConflictMatch[]","3":1,"6":"The list of matches between conflicting and original references at the time of conflict creation."},{"1":"originalReferenceId","2":"String","3":1,"6":"An id of an original reference."},{"1":"status","2":"String","3":1,"6":"The referenceConflict's status."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceConflictListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceConflict[]","3":1,"6":"A list of reference conflicts that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#referenceConflictList."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set."},{"1":"pageInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","3":1,"6":"The pageInfo object encapsulates paging information for the result set."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceConflictMatch","2":[{"1":"conflicting_reference_offset_ms","2":"String","3":1,"6":"Conflicting reference offset in milliseconds."},{"1":"length_ms","2":"String","3":1,"6":"Match length in milliseconds."},{"1":"original_reference_offset_ms","2":"String","3":1,"6":"Original reference offset in milliseconds."},{"1":"type","2":"String","3":1,"6":"The referenceConflictMatch's type."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ReferenceListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Reference[]","3":1,"6":"A list of references that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#referenceList."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set."},{"1":"pageInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","3":1,"6":"The pageInfo object encapsulates paging information for the result set."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Requirements","2":[{"1":"caption","2":"Boolean","3":1,"6":"This value indicates whether the order requires closed captions."},{"1":"hdTranscode","2":"Boolean","3":1,"6":"This value indicates whether the order requires HD-quality video."},{"1":"posterArt","2":"Boolean","3":1,"6":"This value indicates whether the order requires poster artwork."},{"1":"spotlightArt","2":"Boolean","3":1,"6":"This value indicates whether the order requires spotlight artwork."},{"1":"spotlightReview","2":"Boolean","3":1,"6":"This value indicates whether the spotlight artwork for the order needs to be reviewed."},{"1":"trailer","2":"Boolean","3":1,"6":"This value indicates whether the order requires a trailer."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","2":[{"1":"general","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryOwners[]","3":1,"6":"A list that identifies the owners of an asset and the territories where each owner has ownership. General asset ownership is used for all types of assets and is the only type of ownership data that can be provided for assets that are not compositions.\n\nNote: You cannot specify general ownership rights and also specify either mechanical, performance, or synchronization rights."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For rightsOwnership resources, the value is youtubePartner#rightsOwnership."},{"1":"mechanical","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryOwners[]","3":1,"6":"A list that identifies owners of the mechanical rights for a composition asset."},{"1":"performance","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryOwners[]","3":1,"6":"A list that identifies owners of the performance rights for a composition asset."},{"1":"synchronization","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryOwners[]","3":1,"6":"A list that identifies owners of the synchronization rights for a composition asset."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnershipHistory","2":[{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For ownership history resources, the value is youtubePartner#rightsOwnershipHistory."},{"1":"origination","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Origination","3":1,"6":"The origination object contains information that describes the metadata source."},{"1":"ownership","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.RightsOwnership","3":1,"6":"The ownership object contains the ownership data provided by the specified source (origination) at the specified time (timeProvided)."},{"1":"timeProvided","2":"String","3":1,"6":"The time that the ownership data was provided."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Segment","2":[{"1":"duration","2":"String","3":1,"6":"The duration of the segment in milliseconds."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For segment resources, the value is youtubePartner#segment."},{"1":"start","2":"String","3":1,"6":"The start time of the segment, measured in milliseconds from the beginning."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ShowDetails","2":[{"1":"episodeNumber","2":"String","3":1,"6":"The episode number associated with the episode."},{"1":"episodeTitle","2":"String","3":1,"6":"The episode's title."},{"1":"seasonNumber","2":"String","3":1,"6":"The season number associated with the episode."},{"1":"title","2":"String","3":1,"6":"The show's title"}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.SpreadsheetTemplate","2":[{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For spreadsheet template resources, the value is youtubePartner#spreadsheetTemplate."},{"1":"status","2":"String","3":1,"6":"The template status."},{"1":"templateContent","2":"String","3":1,"6":"The template content."},{"1":"templateName","2":"String","3":1,"6":"The template name."},{"1":"templateType","2":"String","3":1,"6":"The template type."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.SpreadsheetTemplateListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.SpreadsheetTemplate[]","3":1,"6":"A list of spreadsheet templates (youtubePartner#spreadsheetTemplate) resources that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#spreadsheetTemplateList."},{"1":"status","2":"String","3":1,"6":"The status of the API response."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.StateCompleted","2":[{"1":"state","2":"String","3":1,"6":"The state that the order entered."},{"1":"timeCompleted","2":"String","3":1,"6":"The time that the state transition occurred."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.StatusReport","2":[{"1":"statusContent","2":"String","3":1,"6":"The content of the report message. Used only in Hybrid."},{"1":"statusFileName","2":"String","3":1,"6":"Status file name. Used only in Hybrid."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryCondition","2":[{"1":"territories","2":"String[]","3":1,"6":"A list of territories. Each territory is an ISO 3166 two-letter country code.."},{"1":"type","2":"String","3":1,"6":"This field indicates whether the associated policy rule is or is not valid in the specified territories."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryConflicts","2":[{"1":"conflictingOwnership","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ConflictingOwnership[]","3":1,"6":"A list of conflicting ownerships."},{"1":"territory","2":"String","3":1,"6":"A territories where the ownership conflict is present. Territory is an ISO 3166 two-letter country code.."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.TerritoryOwners","2":[{"1":"owner","2":"String","3":1,"6":"The name of the asset's owner or rights administrator."},{"1":"publisher","2":"String","3":1,"6":"The name of the asset's publisher. This field is only used for composition assets, and it is used when the asset owner is not known to have a formal relationship established with YouTube."},{"1":"ratio","2":"Number","3":1,"6":"The percentage of the asset that the owner controls or administers. For composition assets, the value can be any value between 0 and 100 inclusive. For all other assets, the only valid values are 100, which indicates that the owner completely owns the asset in the specified territories, and 0, which indicates that you are removing ownership of the asset in the specified territories."},{"1":"territories","2":"String[]","3":1,"6":"A list of territories where the owner owns (or does not own) the asset. Each territory is an ISO 3166 two-letter country code.."},{"1":"type","2":"String","3":1,"6":"This field indicates whether the ownership data applies or does not apply in the specified territories."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Uploader","2":[{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For uploader resources, the value is youtubePartner#uploader."},{"1":"uploaderName","2":"String","3":1,"6":"The uploader name."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.UploaderListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Uploader[]","3":1,"6":"A list of uploader (youtubePartner#uploader) resources that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#uploaderList."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateAsyncRequest","2":[{"1":"content","2":"String","3":1,"6":"The metadata file contents."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this operation, the value is youtubePartner#validateAsyncRequest."},{"1":"uploaderName","2":"String","3":1,"6":"The uploader name."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateAsyncResponse","2":[{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this operation, the value is youtubePartner#validateAsyncResponse."},{"1":"status","2":"String","3":1,"6":"The validation status."},{"1":"validationId","2":"String","3":1,"6":"The validation ID."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateError","2":[{"1":"columnName","2":"String","3":1,"6":"The column name where the error occurred."},{"1":"columnNumber","2":"Integer","3":1,"6":"The column number where the error occurred (1-based)."},{"1":"lineNumber","2":"Integer","3":1,"6":"The line number where the error occurred (1-based)."},{"1":"message","2":"String","3":1,"6":"The error message."},{"1":"messageCode","2":"Integer","3":1,"6":"The code for the error message (if one exists)."},{"1":"severity","2":"String","3":1,"6":"The error severity."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateRequest","2":[{"1":"content","2":"String","3":1,"6":"The metadata file contents."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this operation, the value is youtubePartner#validateRequest."},{"1":"locale","2":"String","3":1,"6":"The desired locale of the error messages as defined in BCP 47 (http://tools.ietf.org/html/bcp47). For example, \"en-US\" or \"de\". If not specified we will return the error messages in English (\"en\")."},{"1":"uploaderName","2":"String","3":1,"6":"The uploader name."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateResponse","2":[{"1":"errors","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateError[]","3":1,"6":"The list of errors and/or warnings."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this operation, the value is youtubePartner#validateResponse."},{"1":"status","2":"String","3":1,"6":"The validation status."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateStatusRequest","2":[{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this operation, the value is youtubePartner#validateStatusRequest."},{"1":"locale","2":"String","3":1,"6":"The desired locale of the error messages as defined in BCP 47 (http://tools.ietf.org/html/bcp47). For example, \"en-US\" or \"de\". If not specified we will return the error messages in English (\"en\")."},{"1":"validationId","2":"String","3":1,"6":"The validation ID."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateStatusResponse","2":[{"1":"errors","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.ValidateError[]","3":1,"6":"The list of errors and/or warnings."},{"1":"isMetadataOnly","2":"Boolean","3":1,"6":"If this is a metadata-only package."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this operation, the value is youtubePartner#validateStatusResponse."},{"1":"status","2":"String","3":1,"6":"The validation status."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOption","2":[{"1":"adBreaks","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AdBreak[]","3":1,"6":"A list of times when YouTube can show an in-stream advertisement during playback of the video."},{"1":"adFormats","2":"String[]","3":1,"6":"A list of ad formats that the video is allowed to show."},{"1":"autoGeneratedBreaks","2":"Boolean","3":1,"6":"Enables this video for automatically generated midroll breaks."},{"1":"breakPosition","2":"String[]","3":1,"6":"The point at which the break occurs during the video playback."},{"1":"id","2":"String","3":1,"6":"The ID that YouTube uses to uniquely identify the video associated with the advertising settings."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this resource, the value is youtubePartner#videoAdvertisingOption."},{"1":"tpAdServerVideoId","2":"String","3":1,"6":"A value that uniquely identifies the video to the third-party ad server."},{"1":"tpTargetingUrl","2":"String","3":1,"6":"The base URL for a third-party ad server from which YouTube can retrieve in-stream ads for the video."},{"1":"tpUrlParameters","2":"String","3":1,"6":"A parameter string to append to the end of the request to the third-party ad server."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.VideoAdvertisingOptionGetEnabledAdsResponse","2":[{"1":"adBreaks","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.AdBreak[]","3":1,"6":"A list of ad breaks that occur in a claimed YouTube video."},{"1":"adsOnEmbeds","2":"Boolean","3":1,"6":"This field indicates whether YouTube can show ads when the video is played in an embedded player."},{"1":"countriesRestriction","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.CountriesRestriction[]","3":1,"6":"A list that identifies the countries where ads can run and the types of ads allowed in those countries."},{"1":"id","2":"String","3":1,"6":"The ID that YouTube uses to uniquely identify the claimed video."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For this resource, the value is youtubePartner#videoAdvertisingOptionGetEnabledAds."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.Whitelist","2":[{"1":"id","2":"String","3":1,"6":"The YouTube channel ID that uniquely identifies the whitelisted channel."},{"1":"kind","2":"String","3":1,"6":"The type of the API resource. For whitelist resources, this value is youtubePartner#whitelist."},{"1":"title","2":"String","3":1,"6":"Title of the whitelisted YouTube channel."}]},{"1":"YoutubePartner_v1.YoutubePartner.V1.Schema.WhitelistListResponse","2":[{"1":"items","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.Whitelist[]","3":1,"6":"A list of whitelist resources that match the request criteria."},{"1":"kind","2":"String","3":1,"6":"The type of the API response. For this operation, the value is youtubePartner#whitelistList."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the pageToken parameter to retrieve the next page of results."},{"1":"pageInfo","2":"YoutubePartner_v1.YoutubePartner.V1.Schema.PageInfo","3":1,"6":"The pageInfo object encapsulates paging information for the result set."}]}],"3":0,"4":0,"5":0}
