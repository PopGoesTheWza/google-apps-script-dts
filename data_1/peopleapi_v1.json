)]}'
{"1":{"1":"Peopleapi_v1","2":[{"1":"ContactGroups","2":"Peopleapi_v1.Peopleapi.V1.Collection.ContactGroupsCollection","3":1},{"1":"People","2":"Peopleapi_v1.Peopleapi.V1.Collection.PeopleCollection","3":1}],"3":[{"1":"newAddress","2":"Peopleapi_v1.Peopleapi.V1.Schema.Address","6":"Create a new instance of Address"},{"1":"newAgeRangeType","2":"Peopleapi_v1.Peopleapi.V1.Schema.AgeRangeType","6":"Create a new instance of AgeRangeType"},{"1":"newBiography","2":"Peopleapi_v1.Peopleapi.V1.Schema.Biography","6":"Create a new instance of Biography"},{"1":"newBirthday","2":"Peopleapi_v1.Peopleapi.V1.Schema.Birthday","6":"Create a new instance of Birthday"},{"1":"newBraggingRights","2":"Peopleapi_v1.Peopleapi.V1.Schema.BraggingRights","6":"Create a new instance of BraggingRights"},{"1":"newContactGroup","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","6":"Create a new instance of ContactGroup"},{"1":"newContactGroupMembership","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMembership","6":"Create a new instance of ContactGroupMembership"},{"1":"newContactGroupMetadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMetadata","6":"Create a new instance of ContactGroupMetadata"},{"1":"newCoverPhoto","2":"Peopleapi_v1.Peopleapi.V1.Schema.CoverPhoto","6":"Create a new instance of CoverPhoto"},{"1":"newCreateContactGroupRequest","2":"Peopleapi_v1.Peopleapi.V1.Schema.CreateContactGroupRequest","6":"Create a new instance of CreateContactGroupRequest"},{"1":"newDate","2":"Peopleapi_v1.Peopleapi.V1.Schema.Date","6":"Create a new instance of Date"},{"1":"newDomainMembership","2":"Peopleapi_v1.Peopleapi.V1.Schema.DomainMembership","6":"Create a new instance of DomainMembership"},{"1":"newEmailAddress","2":"Peopleapi_v1.Peopleapi.V1.Schema.EmailAddress","6":"Create a new instance of EmailAddress"},{"1":"newEvent","2":"Peopleapi_v1.Peopleapi.V1.Schema.Event","6":"Create a new instance of Event"},{"1":"newFieldMetadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","6":"Create a new instance of FieldMetadata"},{"1":"newGender","2":"Peopleapi_v1.Peopleapi.V1.Schema.Gender","6":"Create a new instance of Gender"},{"1":"newImClient","2":"Peopleapi_v1.Peopleapi.V1.Schema.ImClient","6":"Create a new instance of ImClient"},{"1":"newInterest","2":"Peopleapi_v1.Peopleapi.V1.Schema.Interest","6":"Create a new instance of Interest"},{"1":"newLocale","2":"Peopleapi_v1.Peopleapi.V1.Schema.Locale","6":"Create a new instance of Locale"},{"1":"newMembership","2":"Peopleapi_v1.Peopleapi.V1.Schema.Membership","6":"Create a new instance of Membership"},{"1":"newModifyContactGroupMembersRequest","2":"Peopleapi_v1.Peopleapi.V1.Schema.ModifyContactGroupMembersRequest","6":"Create a new instance of ModifyContactGroupMembersRequest"},{"1":"newName","2":"Peopleapi_v1.Peopleapi.V1.Schema.Name","6":"Create a new instance of Name"},{"1":"newNickname","2":"Peopleapi_v1.Peopleapi.V1.Schema.Nickname","6":"Create a new instance of Nickname"},{"1":"newOccupation","2":"Peopleapi_v1.Peopleapi.V1.Schema.Occupation","6":"Create a new instance of Occupation"},{"1":"newOrganization","2":"Peopleapi_v1.Peopleapi.V1.Schema.Organization","6":"Create a new instance of Organization"},{"1":"newPerson","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","6":"Create a new instance of Person"},{"1":"newPersonMetadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.PersonMetadata","6":"Create a new instance of PersonMetadata"},{"1":"newPhoneNumber","2":"Peopleapi_v1.Peopleapi.V1.Schema.PhoneNumber","6":"Create a new instance of PhoneNumber"},{"1":"newPhoto","2":"Peopleapi_v1.Peopleapi.V1.Schema.Photo","6":"Create a new instance of Photo"},{"1":"newProfileMetadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.ProfileMetadata","6":"Create a new instance of ProfileMetadata"},{"1":"newRelation","2":"Peopleapi_v1.Peopleapi.V1.Schema.Relation","6":"Create a new instance of Relation"},{"1":"newRelationshipInterest","2":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipInterest","6":"Create a new instance of RelationshipInterest"},{"1":"newRelationshipStatus","2":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipStatus","6":"Create a new instance of RelationshipStatus"},{"1":"newResidence","2":"Peopleapi_v1.Peopleapi.V1.Schema.Residence","6":"Create a new instance of Residence"},{"1":"newSipAddress","2":"Peopleapi_v1.Peopleapi.V1.Schema.SipAddress","6":"Create a new instance of SipAddress"},{"1":"newSkill","2":"Peopleapi_v1.Peopleapi.V1.Schema.Skill","6":"Create a new instance of Skill"},{"1":"newSource","2":"Peopleapi_v1.Peopleapi.V1.Schema.Source","6":"Create a new instance of Source"},{"1":"newTagline","2":"Peopleapi_v1.Peopleapi.V1.Schema.Tagline","6":"Create a new instance of Tagline"},{"1":"newUpdateContactGroupRequest","2":"Peopleapi_v1.Peopleapi.V1.Schema.UpdateContactGroupRequest","6":"Create a new instance of UpdateContactGroupRequest"},{"1":"newUrl","2":"Peopleapi_v1.Peopleapi.V1.Schema.Url","6":"Create a new instance of Url"},{"1":"newUserDefined","2":"Peopleapi_v1.Peopleapi.V1.Schema.UserDefined","6":"Create a new instance of UserDefined"}],"6":"Provides access to information about profiles and contacts."},"2":[{"1":"Peopleapi_v1.Peopleapi.V1.Collection.ContactGroups.MembersCollection","3":[{"1":"modify","2":"Peopleapi_v1.Peopleapi.V1.Schema.ModifyContactGroupMembersResponse","3":[{"1":"resource","2":"Peopleapi.V1.Schema.ModifyContactGroupMembersRequest"},{"1":"resourceName","2":"String","3":"The resource name of the contact group to modify."}],"6":"Modify the members of a contact group owned by the authenticated user.\n\u003cbr\u003e\nThe only system contact groups that can have members added are\n`contactGroups/myContacts` and `contactGroups/starred`. Other system\ncontact groups are deprecated and can only have contacts removed."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Collection.ContactGroupsCollection","2":[{"1":"Members","2":"Peopleapi_v1.Peopleapi.V1.Collection.ContactGroups.MembersCollection","3":1}],"3":[{"1":"batchGet","2":"Peopleapi_v1.Peopleapi.V1.Schema.BatchGetContactGroupsResponse","6":"Get a list of contact groups owned by the authenticated user by specifying\na list of contact group resource names."},{"1":"batchGet","2":"Peopleapi_v1.Peopleapi.V1.Schema.BatchGetContactGroupsResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Get a list of contact groups owned by the authenticated user by specifying\na list of contact group resource names."},{"1":"create","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":[{"1":"resource","2":"Peopleapi.V1.Schema.CreateContactGroupRequest"}],"6":"Create a new contact group owned by the authenticated user."},{"1":"get","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":[{"1":"resourceName","2":"String","3":"The resource name of the contact group to get."}],"6":"Get a specific contact group owned by the authenticated user by specifying\na contact group resource name."},{"1":"get","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":[{"1":"resourceName","2":"String","3":"The resource name of the contact group to get."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Get a specific contact group owned by the authenticated user by specifying\na contact group resource name."},{"1":"list","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListContactGroupsResponse","6":"List all contact groups owned by the authenticated user. Members of the\ncontact groups are not populated."},{"1":"list","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListContactGroupsResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"List all contact groups owned by the authenticated user. Members of the\ncontact groups are not populated."},{"1":"remove","2":"Peopleapi.V1.Schema.Empty","3":[{"1":"resourceName","2":"String","3":"The resource name of the contact group to delete."}],"6":"Delete an existing contact group owned by the authenticated user by\nspecifying a contact group resource name."},{"1":"remove","2":"Peopleapi.V1.Schema.Empty","3":[{"1":"resourceName","2":"String","3":"The resource name of the contact group to delete."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Delete an existing contact group owned by the authenticated user by\nspecifying a contact group resource name."},{"1":"update","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":[{"1":"resource","2":"Peopleapi.V1.Schema.UpdateContactGroupRequest"},{"1":"resourceName","2":"String","3":"The resource name for the contact group, assigned by the server. An ASCII\nstring, in the form of `contactGroups/`\u003cvar\u003econtact_group_id\u003c/var\u003e."}],"6":"Update the name of an existing contact group owned by the authenticated\nuser."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Collection.People.ConnectionsCollection","3":[{"1":"list","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListConnectionsResponse","3":[{"1":"resourceName","2":"String","3":"The resource name to return connections for. Only `people/me` is valid."}],"6":"Provides a list of the authenticated user's contacts merged with any\nconnected profiles.\n\u003cbr\u003e\nThe request throws a 400 error if 'personFields' is not specified."},{"1":"list","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListConnectionsResponse","3":[{"1":"resourceName","2":"String","3":"The resource name to return connections for. Only `people/me` is valid."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Provides a list of the authenticated user's contacts merged with any\nconnected profiles.\n\u003cbr\u003e\nThe request throws a 400 error if 'personFields' is not specified."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Collection.PeopleCollection","2":[{"1":"Connections","2":"Peopleapi_v1.Peopleapi.V1.Collection.People.ConnectionsCollection","3":1}],"3":[{"1":"createContact","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resource","2":"Peopleapi.V1.Schema.Person"}],"6":"Create a new contact and return the person resource for that contact."},{"1":"createContact","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resource","2":"Peopleapi.V1.Schema.Person"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Create a new contact and return the person resource for that contact."},{"1":"deleteContact","2":"Peopleapi.V1.Schema.Empty","3":[{"1":"resourceName","2":"String","3":"The resource name of the contact to delete."}],"6":"Delete a contact person. Any non-contact data will not be deleted."},{"1":"get","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resourceName","2":"String","3":"The resource name of the person to provide information about.\n\n- To get information about the authenticated user, specify `people/me`.\n- To get information about a google account, specify\n `people/`\u003cvar\u003eaccount_id\u003c/var\u003e.\n- To get information about a contact, specify the resource name that\n  identifies the contact as returned by\n[`people.connections.list`](/people/api/rest/v1/people.connections/list)."}],"6":"Provides information about a person by specifying a resource name. Use\n`people/me` to indicate the authenticated user.\n\u003cbr\u003e\nThe request throws a 400 error if 'personFields' is not specified."},{"1":"get","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resourceName","2":"String","3":"The resource name of the person to provide information about.\n\n- To get information about the authenticated user, specify `people/me`.\n- To get information about a google account, specify\n `people/`\u003cvar\u003eaccount_id\u003c/var\u003e.\n- To get information about a contact, specify the resource name that\n  identifies the contact as returned by\n[`people.connections.list`](/people/api/rest/v1/people.connections/list)."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Provides information about a person by specifying a resource name. Use\n`people/me` to indicate the authenticated user.\n\u003cbr\u003e\nThe request throws a 400 error if 'personFields' is not specified."},{"1":"getBatchGet","2":"Peopleapi_v1.Peopleapi.V1.Schema.GetPeopleResponse","6":"Provides information about a list of specific people by specifying a list\nof requested resource names. Use `people/me` to indicate the authenticated\nuser.\n\u003cbr\u003e\nThe request throws a 400 error if 'personFields' is not specified."},{"1":"getBatchGet","2":"Peopleapi_v1.Peopleapi.V1.Schema.GetPeopleResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Provides information about a list of specific people by specifying a list\nof requested resource names. Use `people/me` to indicate the authenticated\nuser.\n\u003cbr\u003e\nThe request throws a 400 error if 'personFields' is not specified."},{"1":"updateContact","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resource","2":"Peopleapi.V1.Schema.Person"},{"1":"resourceName","2":"String","3":"The resource name for the person, assigned by the server. An ASCII string\nwith a max length of 27 characters, in the form of\n`people/`\u003cvar\u003eperson_id\u003c/var\u003e."}],"6":"Update contact data for an existing contact person. Any non-contact data\nwill not be modified.\n\nThe request throws a 400 error if `updatePersonFields` is not specified.\n\u003cbr\u003e\nThe request throws a 400 error if `person.metadata.sources` is not\nspecified for the contact to be updated.\n\u003cbr\u003e\nThe request throws a 412 error if `person.metadata.sources.etag` is\ndifferent than the contact's etag, which indicates the contact has changed\nsince its data was read. Clients should get the latest person and re-apply\ntheir updates to the latest person."},{"1":"updateContact","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resource","2":"Peopleapi.V1.Schema.Person"},{"1":"resourceName","2":"String","3":"The resource name for the person, assigned by the server. An ASCII string\nwith a max length of 27 characters, in the form of\n`people/`\u003cvar\u003eperson_id\u003c/var\u003e."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Update contact data for an existing contact person. Any non-contact data\nwill not be modified.\n\nThe request throws a 400 error if `updatePersonFields` is not specified.\n\u003cbr\u003e\nThe request throws a 400 error if `person.metadata.sources` is not\nspecified for the contact to be updated.\n\u003cbr\u003e\nThe request throws a 412 error if `person.metadata.sources.etag` is\ndifferent than the contact's etag, which indicates the contact has changed\nsince its data was read. Clients should get the latest person and re-apply\ntheir updates to the latest person."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Address","2":[{"1":"city","2":"String","3":1,"6":"The city of the address."},{"1":"country","2":"String","3":1,"6":"The country of the address."},{"1":"countryCode","2":"String","3":1,"6":"The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm) country\ncode of the address."},{"1":"extendedAddress","2":"String","3":1,"6":"The extended address of the address; for example, the apartment number."},{"1":"formattedType","2":"String","3":1,"6":"The read-only type of the address translated and formatted in the viewer's\naccount locale or the `Accept-Language` HTTP header locale."},{"1":"formattedValue","2":"String","3":1,"6":"The unstructured value of the address. If this is not set by the user it\nwill be automatically constructed from structured values."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the address."},{"1":"poBox","2":"String","3":1,"6":"The P.O. box of the address."},{"1":"postalCode","2":"String","3":1,"6":"The postal code of the address."},{"1":"region","2":"String","3":1,"6":"The region of the address; for example, the state or province."},{"1":"streetAddress","2":"String","3":1,"6":"The street address."},{"1":"type","2":"String","3":1,"6":"The type of the address. The type can be custom or one of these predefined\nvalues:\n\n* `home`\n* `work`\n* `other`"}],"6":"A person's physical address. May be a P.O. box or street address. All fields\nare optional."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.AgeRangeType","2":[{"1":"ageRange","2":"String","3":1,"6":"The age range."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the age range."}],"6":"A person's age range."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.BatchGetContactGroupsResponse","2":[{"1":"responses","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupResponse[]","3":1,"6":"The list of responses for each requested contact group resource."}],"6":"The response to a batch get contact groups request."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Biography","2":[{"1":"contentType","2":"String","3":1,"6":"The content type of the biography."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the biography."},{"1":"value","2":"String","3":1,"6":"The short biography."}],"6":"A person's short biography."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Birthday","2":[{"1":"date","2":"Peopleapi_v1.Peopleapi.V1.Schema.Date","3":1,"6":"The date of the birthday."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the birthday."},{"1":"text","2":"String","3":1,"6":"A free-form string representing the user's birthday."}],"6":"A person's birthday. At least one of the `date` and `text` fields are\nspecified. The `date` and `text` fields typically represent the same\ndate, but are not guaranteed to."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.BraggingRights","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the bragging rights."},{"1":"value","2":"String","3":1,"6":"The bragging rights; for example, `climbed mount everest`."}],"6":"A person's bragging rights."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","2":[{"1":"etag","2":"String","3":1,"6":"The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the\nresource. Used for web cache validation."},{"1":"formattedName","2":"String","3":1,"6":"The read-only name translated and formatted in the viewer's account locale\nor the `Accept-Language` HTTP header locale for system groups names.\nGroup names set by the owner are the same as name."},{"1":"groupType","2":"String","3":1,"6":"The read-only contact group type."},{"1":"memberCount","2":"Integer","3":1,"6":"The total number of contacts in the group irrespective of max members in\nspecified in the request."},{"1":"memberResourceNames","2":"String[]","3":1,"6":"The list of contact person resource names that are members of the contact\ngroup. The field is not populated for LIST requests and can only be updated\nthrough the\n[ModifyContactGroupMembers](/people/api/rest/v1/contactgroups/members/modify)."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMetadata","3":1,"6":"Metadata about the contact group."},{"1":"name","2":"String","3":1,"6":"The contact group name set by the group owner or a system provided name\nfor system groups."},{"1":"resourceName","2":"String","3":1,"6":"The resource name for the contact group, assigned by the server. An ASCII\nstring, in the form of `contactGroups/`\u003cvar\u003econtact_group_id\u003c/var\u003e."}],"6":"A contact group."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMembership","2":[{"1":"contactGroupId","2":"String","3":1,"6":"The contact group ID for the contact group membership. The contact group\nID can be custom or one of these predefined values:\n\n*  `myContacts`\n*  `starred`\n*  A numerical ID for user-created groups."}],"6":"A Google contact group membership."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMetadata","2":[{"1":"deleted","2":"Boolean","3":1,"6":"True if the contact group resource has been deleted. Populated only for\n[`ListContactGroups`](/people/api/rest/v1/contactgroups/list) requests\nthat include a sync token."},{"1":"updateTime","2":"String","3":1,"6":"The time the group was last updated."}],"6":"The read-only metadata about a contact group."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupResponse","2":[{"1":"contactGroup","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":1,"6":"The contact group."},{"1":"requestedResourceName","2":"String","3":1,"6":"The original requested resource name."},{"1":"status","2":"Peopleapi_v1.Peopleapi.V1.Schema.Status","3":1,"6":"The status of the response."}],"6":"The response for a specific contact group."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.CoverPhoto","2":[{"1":"default","2":"Boolean","3":1,"6":"True if the cover photo is the default cover photo;\nfalse if the cover photo is a user-provided cover photo."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the cover photo."},{"1":"url","2":"String","3":1,"6":"The URL of the cover photo."}],"6":"A person's read-only cover photo. A large image shown on the person's\nprofile page that represents who they are or what they care about."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.CreateContactGroupRequest","2":[{"1":"contactGroup","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":1,"6":"The contact group to create."}],"6":"A request to create a new contact group."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Date","2":[{"1":"day","2":"Integer","3":1,"6":"Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant."},{"1":"month","2":"Integer","3":1,"6":"Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day."},{"1":"year","2":"Integer","3":1,"6":"Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year."}],"6":"Represents a whole calendar date, for example a date of birth. The time\nof day and time zone are either specified elsewhere or are not\nsignificant. The date is relative to the\n[Proleptic Gregorian Calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar).\nThe day may be 0 to represent a year and month where the day is not\nsignificant. The year may be 0 to represent a month and day independent\nof year; for example, anniversary date."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.DomainMembership","2":[{"1":"inViewerDomain","2":"Boolean","3":1,"6":"True if the person is in the viewer's Google Apps domain."}],"6":"A Google Apps Domain membership."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.EmailAddress","2":[{"1":"displayName","2":"String","3":1,"6":"The display name of the email."},{"1":"formattedType","2":"String","3":1,"6":"The read-only type of the email address translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the email address."},{"1":"type","2":"String","3":1,"6":"The type of the email address. The type can be custom or one of these\npredefined values:\n\n* `home`\n* `work`\n* `other`"},{"1":"value","2":"String","3":1,"6":"The email address."}],"6":"A person's email address."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Event","2":[{"1":"date","2":"Peopleapi_v1.Peopleapi.V1.Schema.Date","3":1,"6":"The date of the event."},{"1":"formattedType","2":"String","3":1,"6":"The read-only type of the event translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the event."},{"1":"type","2":"String","3":1,"6":"The type of the event. The type can be custom or one of these predefined\nvalues:\n\n* `anniversary`\n* `other`"}],"6":"An event related to the person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","2":[{"1":"primary","2":"Boolean","3":1,"6":"True if the field is the primary field; false if the field is a secondary\nfield."},{"1":"source","2":"Peopleapi_v1.Peopleapi.V1.Schema.Source","3":1,"6":"The source of the field."},{"1":"verified","2":"Boolean","3":1,"6":"True if the field is verified; false if the field is unverified. A\nverified field is typically a name, email address, phone number, or\nwebsite that has been confirmed to be owned by the person."}],"6":"Metadata about a field."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Gender","2":[{"1":"formattedValue","2":"String","3":1,"6":"The read-only value of the gender translated and formatted in the viewer's\naccount locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the gender."},{"1":"value","2":"String","3":1,"6":"The gender for the person. The gender can be custom or one of these\npredefined values:\n\n* `male`\n* `female`\n* `other`\n* `unknown`"}],"6":"A person's gender."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.GetPeopleResponse","2":[{"1":"responses","2":"Peopleapi_v1.Peopleapi.V1.Schema.PersonResponse[]","3":1,"6":"The response for each requested resource name."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ImClient","2":[{"1":"formattedProtocol","2":"String","3":1,"6":"The read-only protocol of the IM client formatted in the viewer's account\nlocale or the `Accept-Language` HTTP header locale."},{"1":"formattedType","2":"String","3":1,"6":"The read-only type of the IM client translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the IM client."},{"1":"protocol","2":"String","3":1,"6":"The protocol of the IM client. The protocol can be custom or one of these\npredefined values:\n\n* `aim`\n* `msn`\n* `yahoo`\n* `skype`\n* `qq`\n* `googleTalk`\n* `icq`\n* `jabber`\n* `netMeeting`"},{"1":"type","2":"String","3":1,"6":"The type of the IM client. The type can be custom or one of these\npredefined values:\n\n* `home`\n* `work`\n* `other`"},{"1":"username","2":"String","3":1,"6":"The user name used in the IM client."}],"6":"A person's instant messaging client."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Interest","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the interest."},{"1":"value","2":"String","3":1,"6":"The interest; for example, `stargazing`."}],"6":"One of the person's interests."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ListConnectionsResponse","2":[{"1":"connections","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person[]","3":1,"6":"The list of people that the requestor is connected to."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used to retrieve the next page of results."},{"1":"nextSyncToken","2":"String","3":1,"6":"The token that can be used to retrieve changes since the last request."},{"1":"totalItems","2":"Integer","3":1,"6":"The total number of items in the list without pagination."},{"1":"totalPeople","2":"Integer","3":1,"6":"**DEPRECATED** (Please use totalItems)\nThe total number of people in the list without pagination."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ListContactGroupsResponse","2":[{"1":"contactGroups","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup[]","3":1,"6":"The list of contact groups. Members of the contact groups are not\npopulated."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used to retrieve the next page of results."},{"1":"nextSyncToken","2":"String","3":1,"6":"The token that can be used to retrieve changes since the last request."},{"1":"totalItems","2":"Integer","3":1,"6":"The total number of items in the list without pagination."}],"6":"The response to a list contact groups request."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Locale","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the locale."},{"1":"value","2":"String","3":1,"6":"The well-formed [IETF BCP 47](https://tools.ietf.org/html/bcp47)\nlanguage tag representing the locale."}],"6":"A person's locale preference."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Membership","2":[{"1":"contactGroupMembership","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMembership","3":1,"6":"The contact group membership."},{"1":"domainMembership","2":"Peopleapi_v1.Peopleapi.V1.Schema.DomainMembership","3":1,"6":"The domain membership."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the membership."}],"6":"A person's read-only membership in a group."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ModifyContactGroupMembersRequest","2":[{"1":"resourceNamesToAdd","2":"String[]","3":1,"6":"The resource names of the contact people to add in the form of in the form\n`people/`\u003cvar\u003eperson_id\u003c/var\u003e."},{"1":"resourceNamesToRemove","2":"String[]","3":1,"6":"The resource names of the contact people to remove in the form of in the\nform of `people/`\u003cvar\u003eperson_id\u003c/var\u003e."}],"6":"A request to modify an existing contact group's members. Contacts can be\nremoved from any group but they can only be added to a user group or\nmyContacts or starred system groups."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ModifyContactGroupMembersResponse","2":[{"1":"notFoundResourceNames","2":"String[]","3":1,"6":"The contact people resource names that were not found."}],"6":"The response to a modify contact group members request."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Name","2":[{"1":"displayName","2":"String","3":1,"6":"The read-only display name formatted according to the locale specified by\nthe viewer's account or the `Accept-Language` HTTP header."},{"1":"displayNameLastFirst","2":"String","3":1,"6":"The read-only display name with the last name first formatted according to\nthe locale specified by the viewer's account or the\n`Accept-Language` HTTP header."},{"1":"familyName","2":"String","3":1,"6":"The family name."},{"1":"givenName","2":"String","3":1,"6":"The given name."},{"1":"honorificPrefix","2":"String","3":1,"6":"The honorific prefixes, such as `Mrs.` or `Dr.`"},{"1":"honorificSuffix","2":"String","3":1,"6":"The honorific suffixes, such as `Jr.`"},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the name."},{"1":"middleName","2":"String","3":1,"6":"The middle name(s)."},{"1":"phoneticFamilyName","2":"String","3":1,"6":"The family name spelled as it sounds."},{"1":"phoneticFullName","2":"String","3":1,"6":"The full name spelled as it sounds."},{"1":"phoneticGivenName","2":"String","3":1,"6":"The given name spelled as it sounds."},{"1":"phoneticHonorificPrefix","2":"String","3":1,"6":"The honorific prefixes spelled as they sound."},{"1":"phoneticHonorificSuffix","2":"String","3":1,"6":"The honorific suffixes spelled as they sound."},{"1":"phoneticMiddleName","2":"String","3":1,"6":"The middle name(s) spelled as they sound."}],"6":"A person's name. If the name is a mononym, the family name is empty."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Nickname","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the nickname."},{"1":"type","2":"String","3":1,"6":"The type of the nickname."},{"1":"value","2":"String","3":1,"6":"The nickname."}],"6":"A person's nickname."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Occupation","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the occupation."},{"1":"value","2":"String","3":1,"6":"The occupation; for example, `carpenter`."}],"6":"A person's occupation."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Organization","2":[{"1":"current","2":"Boolean","3":1,"6":"True if the organization is the person's current organization;\nfalse if the organization is a past organization."},{"1":"department","2":"String","3":1,"6":"The person's department at the organization."},{"1":"domain","2":"String","3":1,"6":"The domain name associated with the organization; for example,\n`google.com`."},{"1":"endDate","2":"Peopleapi_v1.Peopleapi.V1.Schema.Date","3":1,"6":"The end date when the person left the organization."},{"1":"formattedType","2":"String","3":1,"6":"The read-only type of the organization translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"jobDescription","2":"String","3":1,"6":"The person's job description at the organization."},{"1":"location","2":"String","3":1,"6":"The location of the organization office the person works at."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the organization."},{"1":"name","2":"String","3":1,"6":"The name of the organization."},{"1":"phoneticName","2":"String","3":1,"6":"The phonetic name of the organization."},{"1":"startDate","2":"Peopleapi_v1.Peopleapi.V1.Schema.Date","3":1,"6":"The start date when the person joined the organization."},{"1":"symbol","2":"String","3":1,"6":"The symbol associated with the organization; for example, a stock ticker\nsymbol, abbreviation, or acronym."},{"1":"title","2":"String","3":1,"6":"The person's job title at the organization."},{"1":"type","2":"String","3":1,"6":"The type of the organization. The type can be custom or  one of these\npredefined values:\n\n* `work`\n* `school`"}],"6":"A person's past or current organization. Overlapping date ranges are\npermitted."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Person","2":[{"1":"addresses","2":"Peopleapi_v1.Peopleapi.V1.Schema.Address[]","3":1,"6":"The person's street addresses."},{"1":"ageRange","2":"String","3":1,"6":"**DEPRECATED** (Please use `person.ageRanges` instead)**\n\nThe person's read-only age range."},{"1":"ageRanges","2":"Peopleapi_v1.Peopleapi.V1.Schema.AgeRangeType[]","3":1,"6":"The person's read-only age ranges."},{"1":"biographies","2":"Peopleapi_v1.Peopleapi.V1.Schema.Biography[]","3":1,"6":"The person's biographies."},{"1":"birthdays","2":"Peopleapi_v1.Peopleapi.V1.Schema.Birthday[]","3":1,"6":"The person's birthdays."},{"1":"braggingRights","2":"Peopleapi_v1.Peopleapi.V1.Schema.BraggingRights[]","3":1,"6":"The person's bragging rights."},{"1":"coverPhotos","2":"Peopleapi_v1.Peopleapi.V1.Schema.CoverPhoto[]","3":1,"6":"The person's read-only cover photos."},{"1":"emailAddresses","2":"Peopleapi_v1.Peopleapi.V1.Schema.EmailAddress[]","3":1,"6":"The person's email addresses."},{"1":"etag","2":"String","3":1,"6":"The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the\nresource. Used for web cache validation."},{"1":"events","2":"Peopleapi_v1.Peopleapi.V1.Schema.Event[]","3":1,"6":"The person's events."},{"1":"genders","2":"Peopleapi_v1.Peopleapi.V1.Schema.Gender[]","3":1,"6":"The person's genders."},{"1":"imClients","2":"Peopleapi_v1.Peopleapi.V1.Schema.ImClient[]","3":1,"6":"The person's instant messaging clients."},{"1":"interests","2":"Peopleapi_v1.Peopleapi.V1.Schema.Interest[]","3":1,"6":"The person's interests."},{"1":"locales","2":"Peopleapi_v1.Peopleapi.V1.Schema.Locale[]","3":1,"6":"The person's locale preferences."},{"1":"memberships","2":"Peopleapi_v1.Peopleapi.V1.Schema.Membership[]","3":1,"6":"The person's read-only group memberships."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.PersonMetadata","3":1,"6":"Read-only metadata about the person."},{"1":"names","2":"Peopleapi_v1.Peopleapi.V1.Schema.Name[]","3":1,"6":"The person's names."},{"1":"nicknames","2":"Peopleapi_v1.Peopleapi.V1.Schema.Nickname[]","3":1,"6":"The person's nicknames."},{"1":"occupations","2":"Peopleapi_v1.Peopleapi.V1.Schema.Occupation[]","3":1,"6":"The person's occupations."},{"1":"organizations","2":"Peopleapi_v1.Peopleapi.V1.Schema.Organization[]","3":1,"6":"The person's past or current organizations."},{"1":"phoneNumbers","2":"Peopleapi_v1.Peopleapi.V1.Schema.PhoneNumber[]","3":1,"6":"The person's phone numbers."},{"1":"photos","2":"Peopleapi_v1.Peopleapi.V1.Schema.Photo[]","3":1,"6":"The person's read-only photos."},{"1":"relations","2":"Peopleapi_v1.Peopleapi.V1.Schema.Relation[]","3":1,"6":"The person's relations."},{"1":"relationshipInterests","2":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipInterest[]","3":1,"6":"The person's read-only relationship interests."},{"1":"relationshipStatuses","2":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipStatus[]","3":1,"6":"The person's read-only relationship statuses."},{"1":"residences","2":"Peopleapi_v1.Peopleapi.V1.Schema.Residence[]","3":1,"6":"The person's residences."},{"1":"resourceName","2":"String","3":1,"6":"The resource name for the person, assigned by the server. An ASCII string\nwith a max length of 27 characters, in the form of\n`people/`\u003cvar\u003eperson_id\u003c/var\u003e."},{"1":"sipAddresses","2":"Peopleapi_v1.Peopleapi.V1.Schema.SipAddress[]","3":1,"6":"The person's SIP addresses."},{"1":"skills","2":"Peopleapi_v1.Peopleapi.V1.Schema.Skill[]","3":1,"6":"The person's skills."},{"1":"taglines","2":"Peopleapi_v1.Peopleapi.V1.Schema.Tagline[]","3":1,"6":"The person's read-only taglines."},{"1":"urls","2":"Peopleapi_v1.Peopleapi.V1.Schema.Url[]","3":1,"6":"The person's associated URLs."},{"1":"userDefined","2":"Peopleapi_v1.Peopleapi.V1.Schema.UserDefined[]","3":1,"6":"The person's user defined data."}],"6":"Information about a person merged from various data sources such as the\nauthenticated user's contacts and profile data.\n\nMost fields can have multiple items. The items in a field have no guaranteed\norder, but each non-empty field is guaranteed to have exactly one field with\n`metadata.primary` set to true."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.PersonMetadata","2":[{"1":"deleted","2":"Boolean","3":1,"6":"True if the person resource has been deleted. Populated only for\n[`connections.list`](/people/api/rest/v1/people.connections/list) requests\nthat include a sync token."},{"1":"linkedPeopleResourceNames","2":"String[]","3":1,"6":"Resource names of people linked to this resource."},{"1":"objectType","2":"String","3":1,"6":"**DEPRECATED** (Please use\n`person.metadata.sources.profileMetadata.objectType` instead)\n\nThe type of the person object."},{"1":"previousResourceNames","2":"String[]","3":1,"6":"Any former resource names this person has had. Populated only for\n[`connections.list`](/people/api/rest/v1/people.connections/list) requests\nthat include a sync token.\n\nThe resource name may change when adding or removing fields that link a\ncontact and profile such as a verified email, verified phone number, or\nprofile URL."},{"1":"sources","2":"Peopleapi_v1.Peopleapi.V1.Schema.Source[]","3":1,"6":"The sources of data for the person."}],"6":"The read-only metadata about a person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.PersonResponse","2":[{"1":"httpStatusCode","2":"Integer","3":1,"6":"**DEPRECATED** (Please use status instead)\n\n[HTTP 1.1 status code]\n(http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)."},{"1":"person","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":1,"6":"The person."},{"1":"requestedResourceName","2":"String","3":1,"6":"The original requested resource name. May be different than the resource\nname on the returned person.\n\nThe resource name can change when adding or removing fields that link a\ncontact and profile such as a verified email, verified phone number, or a\nprofile URL."},{"1":"status","2":"Peopleapi_v1.Peopleapi.V1.Schema.Status","3":1,"6":"The status of the response."}],"6":"The response for a single person"},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.PhoneNumber","2":[{"1":"canonicalForm","2":"String","3":1,"6":"The read-only canonicalized [ITU-T\nE.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf)\nform of the phone number."},{"1":"formattedType","2":"String","3":1,"6":"The read-only type of the phone number translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the phone number."},{"1":"type","2":"String","3":1,"6":"The type of the phone number. The type can be custom or one of these\npredefined values:\n\n* `home`\n* `work`\n* `mobile`\n* `homeFax`\n* `workFax`\n* `otherFax`\n* `pager`\n* `workMobile`\n* `workPager`\n* `main`\n* `googleVoice`\n* `other`"},{"1":"value","2":"String","3":1,"6":"The phone number."}],"6":"A person's phone number."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Photo","2":[{"1":"default","2":"Boolean","3":1,"6":"True if the photo is a default photo;\nfalse if the photo is a user-provided photo."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the photo."},{"1":"url","2":"String","3":1,"6":"The URL of the photo. You can change the desired size by appending a query\nparameter `sz\u003d`\u003cvar\u003esize\u003c/var\u003e at the end of the url. Example:\n`https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz\u003d50`"}],"6":"A person's read-only photo. A picture shown next to the person's name to\nhelp others recognize the person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ProfileMetadata","2":[{"1":"objectType","2":"String","3":1,"6":"The profile object type."},{"1":"userTypes","2":"String[]","3":1,"6":"The user types."}],"6":"The read-only metadata about a profile."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Relation","2":[{"1":"formattedType","2":"String","3":1,"6":"The type of the relation translated and formatted in the viewer's account\nlocale or the locale specified in the Accept-Language HTTP header."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the relation."},{"1":"person","2":"String","3":1,"6":"The name of the other person this relation refers to."},{"1":"type","2":"String","3":1,"6":"The person's relation to the other person. The type can be custom or one of\nthese predefined values:\n\n* `spouse`\n* `child`\n* `mother`\n* `father`\n* `parent`\n* `brother`\n* `sister`\n* `friend`\n* `relative`\n* `domesticPartner`\n* `manager`\n* `assistant`\n* `referredBy`\n* `partner`"}],"6":"A person's relation to another person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipInterest","2":[{"1":"formattedValue","2":"String","3":1,"6":"The value of the relationship interest translated and formatted in the\nviewer's account locale or the locale specified in the Accept-Language\nHTTP header."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the relationship interest."},{"1":"value","2":"String","3":1,"6":"The kind of relationship the person is looking for. The value can be custom\nor one of these predefined values:\n\n* `friend`\n* `date`\n* `relationship`\n* `networking`"}],"6":"A person's read-only relationship interest ."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipStatus","2":[{"1":"formattedValue","2":"String","3":1,"6":"The read-only value of the relationship status translated and formatted in\nthe viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the relationship status."},{"1":"value","2":"String","3":1,"6":"The relationship status. The value can be custom or one of these\npredefined values:\n\n* `single`\n* `inARelationship`\n* `engaged`\n* `married`\n* `itsComplicated`\n* `openRelationship`\n* `widowed`\n* `inDomesticPartnership`\n* `inCivilUnion`"}],"6":"A person's read-only relationship status."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Residence","2":[{"1":"current","2":"Boolean","3":1,"6":"True if the residence is the person's current residence;\nfalse if the residence is a past residence."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the residence."},{"1":"value","2":"String","3":1,"6":"The address of the residence."}],"6":"A person's past or current residence."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.SipAddress","2":[{"1":"formattedType","2":"String","3":1,"6":"The read-only type of the SIP address translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the SIP address."},{"1":"type","2":"String","3":1,"6":"The type of the SIP address. The type can be custom or or one of these\npredefined values:\n\n* `home`\n* `work`\n* `mobile`\n* `other`"},{"1":"value","2":"String","3":1,"6":"The SIP address in the\n[RFC 3261 19.1](https://tools.ietf.org/html/rfc3261#section-19.1) SIP URI\nformat."}],"6":"A person's SIP address. Session Initial Protocol addresses are used for VoIP\ncommunications to make voice or video calls over the internet."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Skill","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the skill."},{"1":"value","2":"String","3":1,"6":"The skill; for example, `underwater basket weaving`."}],"6":"A skill that the person has."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Source","2":[{"1":"etag","2":"String","3":1,"6":"**Only populated in `person.metadata.sources`.**\n\nThe [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the\nsource. Used for web cache validation."},{"1":"id","2":"String","3":1,"6":"The unique identifier within the source type generated by the server."},{"1":"profileMetadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.ProfileMetadata","3":1,"6":"**Only populated in `person.metadata.sources`.**\n\nMetadata about a source of type PROFILE."},{"1":"type","2":"String","3":1,"6":"The source type."},{"1":"updateTime","2":"String","3":1,"6":"**Only populated in `person.metadata.sources`.**\n\nLast update timestamp of this source."}],"6":"The source of a field."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Status","2":[{"1":"code","2":"Integer","3":1,"6":"The status code, which should be an enum value of google.rpc.Code."},{"1":"details","2":"Object[]","3":1,"6":"A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."},{"1":"message","2":"String","3":1,"6":"A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."}],"6":"The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error\nmessage, and error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Tagline","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the tagline."},{"1":"value","2":"String","3":1,"6":"The tagline."}],"6":"A read-only brief one-line description of the person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.UpdateContactGroupRequest","2":[{"1":"contactGroup","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":1,"6":"The contact group to update."}],"6":"A request to update an existing user contact group. All updated fields will\nbe replaced."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Url","2":[{"1":"formattedType","2":"String","3":1,"6":"The read-only type of the URL translated and formatted in the viewer's\naccount locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the URL."},{"1":"type","2":"String","3":1,"6":"The type of the URL. The type can be custom or one of these predefined\nvalues:\n\n* `home`\n* `work`\n* `blog`\n* `profile`\n* `homePage`\n* `ftp`\n* `reservations`\n* `appInstallPage`: website for a Google+ application.\n* `other`"},{"1":"value","2":"String","3":1,"6":"The URL."}],"6":"A person's associated URLs."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.UserDefined","2":[{"1":"key","2":"String","3":1,"6":"The end user specified key of the user defined data."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the user defined data."},{"1":"value","2":"String","3":1,"6":"The end user specified value of the user defined data."}],"6":"Arbitrary user data that is populated by the end users."}],"3":0,"4":0,"5":0}
